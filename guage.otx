def TABLE[-bar(-3,( -COLS ))][j] {
	if(( -( betray(-COLS,protect(foo()),( -54 )) ) ) * 220.604 / --610.95 - ( mislead(Stark,-( foo(( --ROWS )) )) ) - -TABLE[Ygritte][( -y )]){

} else {
	Ygritte /= ( 0.23 )
};
	if(mislead(COLS - COLS,ROWS,COLS)){
	x *= -y;
	-bar(TABLE[0.57][Stark],rule(( ( ( 0.46 ) ) ))) / Dog
}
}
def TABLE[-660.75][j] {
	if(COLS){
	if(-47){
	dog += ( -( rule(-1,Hodor) ) ) / COLS + ( ( Ygritte ) )
} else {
	if(betray(( dog * TABLE[-destroy()][Stark * dog] ))){
	TABLE[-bar()][-y]
}
};
	( ROWS );
	y /= COLS
}
}
def bar(Arya){
	-61;
	-Jon
}
def bar(){
	Hodor += -( -92 ) - ( 0.59 )
}
def TABLE[( -COLS )][j] {
	( COLS )
}
var Arya = ( TABLE[-56][Sansa] )
def foo(Stark,y){
	-50
}
def betray(Arya){
	if(COLS){
	if(--TABLE[Hodor * rule(-COLS * ( mislead() ),( ( -370.5707 ) )) / COLS][mislead(TABLE[betray()][destroy(mislead(ROWS),betray(-1) * 0.4 - -0.14)],-COLS,COLS)]){
	if(--( bar(COLS,( 0.02 ) + COLS + -0.59,COLS - -740.72 - -1000.35) )){
	if(-490.57){
	y /= Arya;
	if(-( Arya )){
	( mislead(-0.28) )
}
};
	if(Hodor){

}
}
} else {
	-9;
	Sansa /= -TABLE[mislead(COLS,-2)][( Stark )] + 0.44;
	--Stark - dog / rule(destroy() / --86,( Ygritte ),x) - TABLE[Sansa][ROWS / x]
}
} else {
	if(--Ygritte + ( -rule(( -1 )) ) - TABLE[( mislead(ROWS) )][Ygritte]){
	if(-( --920.807 ) - ( ( destroy() ) ) / rule(95,foo(Jon * ( x ),-0.89)) + -ROWS){
	x += ( TABLE[TABLE[Arya][dog]][ROWS] / -Ygritte );
	Jon *= -( ( ( COLS ) ) );
	if(0.56){
	if(Jon){
	if(protect(y)){
	if(-bar(foo(),TABLE[Arya][( -mislead(-mislead()) )],ROWS)){
	foo(-( dog ),-0.37)
};
	( protect(bar(COLS,y),-betray(ROWS,-12) - -50.404,Sansa) )
};
	--190.85 - -COLS + COLS;
	0.48
};
	Ygritte -= --500.9805
} else {
	-0.8
}
} else {

};
	TABLE[Ygritte][ROWS];
	if(bar()){
	y /= COLS;
	Hodor;
	if(-0.16){
	( -0.72 + TABLE[-1][-( -rule(mislead(bar(-( Sansa ))),---900.7 + dog * ( y ) - -rule(dog,COLS * ( ( ( foo(0.37) ) + -destroy(( protect() )) ) ) * COLS) + 52,( ( betray(TABLE[TABLE[protect(( ( foo(( mislead(foo(COLS) - -protect(--600.5566),foo(TABLE[ROWS][destroy(x,destroy(-TABLE[-TABLE[( Stark )][TABLE[-( Arya )][-0.14]]][( ROWS )],-1,x))])) )) ) ),betray(Arya,( --0.17 ),( foo(( 0.14 ),-( -78 )) ) + -destroy() / ( 0.21 ))) * protect(protect(bar(( -0.1 ),-( ROWS )),Hodor / destroy(-41)))][COLS - betray()]][bar(COLS,protect(betray(ROWS)))]) ) )) ) - --x / ( -( ( protect(-0.6,rule() - COLS,ROWS) ) + 5 ) ) / protect(-COLS)] )
} else {

}
} else {
	y *= -0.17;
	y *= betray(rule(protect(rule(( -0.81 ),( COLS )) / --Stark * -( ROWS ),TABLE[destroy(-( TABLE[bar(( -0.78 + ( -54 ) ),-1)][-COLS] ) + Ygritte - -( ( 22 + COLS ) - COLS ) / COLS)][COLS * -81],y)),destroy(bar(-30,290.779),--Sansa * ROWS * -foo(),140.592),16)
}
} else {
	ROWS;
	-( Sansa )
}
}
}
assert y + COLS : "Winter is coming"
def mislead(Arya){

}
var Sansa = -protect(ROWS,bar(COLS))
def betray(){
	if(-1 + TABLE[TABLE[bar(Stark,ROWS)][( 320.327 ) + Sansa]][dog / mislead(Jon)]){

} else {
	if(( -mislead(TABLE[Jon][COLS]) * COLS )){
	Sansa *= foo(-( ROWS / TABLE[( -bar(( ( foo(bar()) - -bar(( destroy(rule(COLS,Sansa + -1 / ( -Stark ),( mislead() )),1) ),( ( Ygritte ) )) - --16 ) ),1 * Arya) )][94] ) * COLS,0.1)
} else {

};
	Arya /= destroy(0.93 - TABLE[TABLE[TABLE[( ( Jon / Jon * 4 * ROWS ) )][TABLE[y][( y )] / betray()]][rule(-0.98,COLS)]][dog]);
	0.4
}
}
var Hodor = ( protect(-43 * TABLE[betray(--0.74,mislead(ROWS,foo(ROWS,-0.09)),Jon)][-mislead(x,--y / ( ( ROWS / betray(98,TABLE[-49][destroy(x,0.94,Hodor + betray(bar(COLS / TABLE[-430.6982][-0.47],mislead(0.12)) - bar(),rule(TABLE[Sansa][x],( --38 ),TABLE[-ROWS][( 820.033 )])))],Jon) ) ))],y,dog - -77) )
assert -0.39 : "What do we say to the Lord of Death?"
def bar(y){
	-foo(0.92,0.04) + mislead(dog,foo(--foo(( ROWS )) + ( Sansa )),( ( foo(660.75) ) )) * COLS / bar(COLS - 31,COLS)
}
def TABLE[betray(( ( COLS ) ),( ( Hodor ) * -80 + 250.347 ))][k] {
	if(COLS){
	if(( -20.38 )){
	-100
} else {
	if(-0.7){
	-1
} else {

}
};
	if(TABLE[58][TABLE[COLS][COLS]]){
	if(-( foo(0.98,---66 * x - 41) )){
	if(COLS / TABLE[dog][( bar(-Arya) )] + 1 * dog){
	if(dog){
	if(-0.23){
	if(( -0.49 / -destroy(COLS - -0.52,Jon) )){
	TABLE[destroy(-bar(),protect(-( -55 ),Ygritte))][Ygritte * Hodor - ROWS];
	-190.469
};
	TABLE[( TABLE[-ROWS + -( ( ( ---Jon ) ) )][-TABLE[foo(( Stark )) * COLS][betray(COLS)] * -1] )][-88]
} else {
	ROWS;
	bar(Stark);
	if(( TABLE[protect(COLS,--( bar(4 + ROWS / ( Hodor )) * -Sansa - ( Sansa ) ))][mislead(COLS,dog,Stark)] )){
	if(96){

} else {
	if(Jon / -Sansa){
	ROWS
} else {

}
};
	destroy()
} else {
	if(foo(--ROWS)){
	Sansa *= -bar(-ROWS + ( 600.11 / COLS ),y);
	--bar(( 0.07 )) * ( ( x ) )
};
	-Ygritte
}
};
	ROWS
}
} else {
	x
};
	if(-1){
	-0.11;
	protect(TABLE[betray(-( -TABLE[( ( -rule(( 0.98 ),mislead(COLS,( 0.45 * -COLS + dog ),-( -59 )),-0.24) ) )][-( Arya )] ),COLS,Ygritte)][( Jon )])
};
	-0.17 - -1 + mislead(( ( 0.48 ) ),bar(( ROWS ),-0.78)) + Ygritte
};
	y += ---1 / -( ROWS - ( ( -betray(rule()) ) ) ) * -COLS - ( protect(( ( -1 ) ),( rule(69,TABLE[dog][1]) ),-540.863 + 0.53) )
}
} else {
	if(( ROWS )){
	Sansa *= -TABLE[-0.79][2];
	bar(Ygritte) - ( ( -0.93 ) )
} else {
	if(( ( TABLE[-COLS][TABLE[bar(( -ROWS ),-27 * -ROWS,COLS)][mislead(Hodor) * rule(foo(TABLE[270.2449 - ( Sansa )][ROWS],--Jon,ROWS) * rule(),y)] + -0.68] ) )){
	0.8;
	Ygritte -= dog;
	destroy(--720.5,destroy(( 230.94 ) * -Arya,-betray()))
};
	Jon /= -570.1 / Jon
};
	if(-COLS + ( mislead(( foo(dog,foo(ROWS) + dog,( Arya )) ),Arya) )){
	dog += TABLE[---protect() * -0.26][dog];
	if(foo(-COLS,TABLE[--92][-0.39 / Arya - foo(Sansa)])){
	if(-60.385){

} else {
	y / COLS
};
	Stark;
	x -= ROWS + -1
}
}
};
	( bar(0.53,-48,( ( Sansa ) )) )
}
assert -COLS : "One can not simply parse himself"
var Hodor = ( ROWS )
var Arya = ( Ygritte ) * -COLS * Jon
assert Jon : "Winter is coming"
var dog = Ygritte + Jon
def protect(){
	-destroy(0.18,( ( -destroy(( -rule() )) ) ));
	Ygritte
}
def TABLE[COLS][j] {
	COLS;
	if(foo(destroy())){
	if(-ROWS){
	if(COLS * ( -16 )){
	( -Stark )
} else {
	Hodor
}
} else {

}
} else {
	if(COLS){
	--( ROWS );
	Arya -= TABLE[58][0.31] * ( ROWS * TABLE[mislead(bar(---0.16 - ( betray(( foo(destroy(TABLE[( ( x ) )][Arya]),ROWS + ( foo(-TABLE[-87][TABLE[ROWS][Hodor]],-95) )) ),( -dog * -COLS + -mislead(betray()) )) * mislead(-( --protect(rule(-ROWS / ( y ),( -0.67 ),-0.97),dog) )) ) - -1))][--0.94] + betray() / ROWS )
} else {
	COLS;
	x *= protect(TABLE[( bar(bar(Ygritte)) )][( -1000.211 )] * -betray(ROWS,ROWS) * Hodor);
	if(bar(Hodor)){
	TABLE[Stark][TABLE[-44 + Stark][TABLE[0.37][Arya]]]
} else {
	Stark
}
};
	if(protect()){

} else {
	if(x){
	if(-7){
	if(( COLS )){

} else {
	if(35){
	0.28;
	if(100.2){

} else {
	if(-11 / -betray(y)){
	--( -30 );
	if(mislead(19)){

} else {

}
} else {

}
};
	betray(( -5 ))
} else {

}
};
	dog *= 0.76
};
	if(Jon){
	x /= -dog * mislead()
}
} else {
	Sansa
};
	if(dog){
	Ygritte /= -destroy(1,---( COLS / -1 - protect(1,-Ygritte * 980.3823 / --bar(destroy(Stark,-betray(destroy(( COLS ),rule(( betray(( -0.04 ),-destroy(----COLS * betray(ROWS) + dog,ROWS) - y) ),x),TABLE[betray(x,foo(x),16)][ROWS * y] - ROWS - betray(y,protect())),protect(-( ( -1 ) + ROWS / -destroy(-Stark + ( -320.7589 )) ),-( dog ))),---0.16),Ygritte,destroy() / -Sansa)) )) * TABLE[Stark][( COLS / betray() ) + TABLE[-ROWS + --( ( destroy(( destroy(Stark) )) ) )][COLS]] / -1
} else {
	if(TABLE[-1][bar(destroy(ROWS))]){
	( TABLE[( ( y ) )][28] / COLS )
} else {
	if(-Arya){

};
	betray(TABLE[( -Sansa / COLS / COLS + ( 1 ) )][Stark / ROWS - 60.05],-( -68 ) - mislead(destroy(rule(0.85),-( -73 * COLS ),bar(( x ),-27)) / 37,Stark,bar(( TABLE[( betray(--COLS) ) * TABLE[TABLE[COLS][-0.65] + x][( betray(Jon / -0.76 * Jon) + -dog + -TABLE[TABLE[ROWS][( y - Arya )]][COLS] )] - ROWS][Ygritte] / -0.6 * COLS ),ROWS + -Jon)) * y,( 29 ))
};
	betray(( -0.58 ),-( protect(COLS,0.97,1) ));
	-Stark / 96 * -foo(COLS)
}
}
}
}
def bar(Sansa,Ygritte,Stark){
	-( rule(Hodor * ( ( -76 ) ),TABLE[ROWS][( 95 ) / ( -1 )]) ) * Ygritte / 1
}
assert ROWS : "What do we say to the Lord of Death?"
var x = ROWS
def betray(dog,Jon,x){
	Jon += 0.84
}
def destroy(Hodor,Ygritte){
	Sansa /= COLS;
	if(Arya + ( Hodor )){
	if(rule(ROWS) * ( COLS ) / protect()){
	if(0){
	Sansa -= -60;
	( -( -Hodor ) )
};
	Sansa /= ROWS;
	Jon /= y
};
	if(x){
	if(-COLS){
	if(( Stark )){
	Arya /= --1
} else {
	if(COLS){
	if(-1){
	if(Stark){
	ROWS;
	-1;
	( -betray(ROWS / 0.82 * TABLE[-TABLE[COLS][-850.8]][Arya]) )
} else {
	if(Arya){
	y += -( rule() )
};
	if(y){
	if(Sansa){

}
} else {
	Ygritte *= -( rule(-mislead(( dog )) * TABLE[Jon / destroy(-( ROWS + 84 ))][Ygritte / 32] + -( ( ROWS ) ) + Ygritte * Arya) )
};
	Hodor
};
	( ( -COLS ) );
	-7
} else {
	ROWS;
	if(-0.18){
	dog /= -910.77;
	-Arya / Sansa
}
};
	if(-87){

}
};
	if(ROWS / -0.01){
	if(--ROWS){
	dog -= -7;
	Sansa
}
} else {
	foo(Sansa * 13,protect(COLS),-0.89)
}
};
	y -= destroy(16);
	y /= dog
}
}
}
}
def TABLE[---0.15][i] {
	Jon += betray(( TABLE[-1][-Ygritte] ),--38)
}
var Hodor = Jon
assert -rule(( betray(--5) ),-protect(),bar(destroy(destroy(-( --x ))),COLS,-84) - protect()) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(x){
	if(---460.455 * -( Jon ) + ( Jon / ( -destroy(-1,betray()) ) ) + Stark + Ygritte){
	if(TABLE[bar()][COLS]){
	dog /= Jon + -( ( --COLS ) ) + ( Ygritte );
	if(-mislead(betray(mislead(),mislead(-bar(( foo(ROWS,-( 0.42 ) + --rule(-1,( -TABLE[--0.75][dog] * ( 930.852 ) )) - -22) ) / COLS,Stark),( -( ( --rule(Stark / ROWS) - Hodor ) ) ),COLS)),( 4 ))){
	Hodor += TABLE[Ygritte][COLS] * ( TABLE[y][( Jon )] )
} else {
	y += -protect(390.129)
}
}
};
	if(bar(( ( TABLE[TABLE[Hodor][-0.95]][ROWS] + COLS ) - TABLE[-( x )][-8 + protect(-protect(),foo(ROWS)) / foo(dog / ( ( protect(-( COLS ) * protect(foo(COLS),----Stark + 1 + COLS)) ) )) / Ygritte] ))){
	if(-730.5868){
	Jon -= ( ROWS ) + Arya * bar(Arya,99,0.46);
	if(-( -COLS )){
	Hodor *= TABLE[0.91][--TABLE[-( -870.55 )][-22]];
	0.91
}
} else {
	( 94 )
}
} else {
	x -= mislead(Stark,-0.57 * ----destroy(80.784 - --ROWS * ( -0.31 + ROWS ) + x / --Arya + ( destroy(Stark,( -Stark )) ),x - COLS,betray(-( TABLE[Stark][0.78] ))));
	y *= TABLE[betray(68 + 11)][Ygritte]
}
}
def mislead(Arya,Jon,Arya){
	y += TABLE[y][56];
	dog *= COLS / ROWS
}
var y = Ygritte
def bar(y){
	if(-0.05){
	ROWS;
	if(ROWS){
	Arya *= ( bar(ROWS,0.27,( 1 )) );
	Hodor -= COLS
};
	Sansa
} else {
	( -75 * TABLE[-betray(( --83 ),-( TABLE[--37][-mislead(protect(-610.392 - 0.89)) * 1] ))][x] ) - 0.25;
	if(mislead(TABLE[COLS][( ( -TABLE[protect(-COLS,--betray(protect(foo(),( TABLE[Stark][( ( COLS ) )] ),Hodor),-( ROWS + --Stark * 1 ),TABLE[( ( ---destroy(y,0.78) + -0.54 - ( Stark ) / foo() ) )][rule(protect(( Ygritte - Jon )),TABLE[12][x]) * -661]) * ROWS + -75 + 1 - 330.833 + ROWS + Arya / ( betray(Sansa,Sansa - ( protect() )) ),Sansa) + COLS][dog] ) ) - destroy() / -70])){

} else {

}
};
	if(-0.32){
	-0.06 - 290.017 - -0.58
};
	if(COLS){
	y /= --( ( -750.496 / Ygritte ) );
	( Jon / foo(( 35 )) );
	if(( ( -19 ) )){
	-rule(-( -520.0915 ) - 1,--ROWS - TABLE[Jon][bar(0.44 * ROWS)],340.14)
}
} else {
	if(( ( protect(betray(( x ),TABLE[-( 74 )][dog],dog),mislead(( betray(1) ),ROWS - -Hodor * foo(TABLE[COLS][--14]) - ( COLS / TABLE[Stark][Jon] - destroy(0.79,protect()) ),Hodor * 21) * ROWS) ) )){

};
	1 + 37
}
}
var Ygritte = ( -rule(x,destroy(bar(Arya,y),Arya)) )
def rule(Sansa,Ygritte){
	( -1 * ( 0.55 + TABLE[( destroy(9,x) ) * -1][( -0.43 )] ) );
	( COLS )
}
def destroy(Jon,Sansa){
	mislead(--( ( TABLE[( -y )][protect(( bar() * ( ---49 ) ),1 - foo(-Jon,-2))] * Hodor / -protect(-36,x,TABLE[-bar(( Sansa ),( --59 )) + Stark][( x )]) ) ) / COLS,--foo(),-COLS);
	Sansa += bar(( 43 ) / ( ( ( -0.11 ) ) ),( y ))
}
def betray(x,Hodor){
	if(--0.28){
	Jon += 650.9189;
	Sansa += ROWS;
	x /= ROWS
} else {
	Hodor *= ROWS;
	Hodor *= -0.37 + protect(( -42 )) + TABLE[-( -76 )][0.65]
};
	y *= ( rule(-Sansa) )
}
var Jon = mislead(-dog,-ROWS) * destroy(-( ( 330.9276 ) ),ROWS) / --betray() * ( 1 )
var Arya = 0.8
def TABLE[TABLE[-y - mislead(-37)][-COLS]][i] {

}
assert ( ( --1 ) ) - ROWS : "What do we say to the Lord of Death?"
var y = COLS
def TABLE[TABLE[-ROWS][-( ( rule() ) )]][k] {
	0.63
}
var y = foo(( 1 ) / COLS * -920.351 - -78 * ROWS,COLS)
var Ygritte = -96 / ROWS / Stark
def TABLE[COLS / Arya - ROWS + ( foo() )][j] {

}
assert ( Ygritte ) : "Nothing burns like the cold."
def TABLE[-0.63 * betray(( Jon - foo() ),mislead())][k] {

}
def mislead(x,Sansa){
	y /= rule(980.5);
	COLS
}
var Arya = mislead(95 / ( mislead(protect(( --foo(ROWS,betray(ROWS,dog,Arya)) )) * -betray()) ),Sansa + ( TABLE[( Sansa ) * 850.9177][rule() / ROWS] ) - bar(1) * ( -mislead(880.561) ) + -( bar(-Arya,Sansa) ),-ROWS)
var y = -270.5
def TABLE[ROWS][j] {

}
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[TABLE[-12][COLS]][-( -COLS )] : "Nothing burns like the cold."
def TABLE[-58 - Ygritte][j] {
	Hodor += ( -destroy(dog,0.32) + -ROWS - bar(( betray(mislead(Ygritte) * foo(ROWS / protect(-ROWS + -x,-Hodor,betray(destroy(-bar()),-0.68,-bar(----0.19,( COLS )))))) + betray(--ROWS,TABLE[( ( -1 ) ) + x][-1]) )) / ( -980.466 ) )
}
def rule(Sansa){

}
def TABLE[COLS][k] {
	if(TABLE[470.61][TABLE[-COLS][protect(foo(-1,-foo(-TABLE[destroy(betray(Stark - Jon / ROWS) - Sansa,TABLE[Stark / -32][-( -33 )])][-bar()])))]]){
	Stark;
	if(rule(( -0.89 ),ROWS)){
	dog -= Stark
}
};
	Arya *= Sansa;
	x *= -1
}
assert ( rule(-Arya,( 49 / ROWS )) ) : "Winter is coming"
var x = Ygritte
assert protect(44,( foo(dog) )) : "What do we say to the Lord of Death?"
def TABLE[TABLE[Ygritte / ( -x / destroy(( y ) + COLS,-dog,--79) )][COLS + ( 0.66 - -x ) + 8]][i] {
	dog *= bar(ROWS,-( COLS ))
}
def TABLE[destroy(0.41)][k] {
	15
}
assert destroy(140.479,ROWS,( ( ( 0.56 ) ) / -0.61 )) - dog : "What do we say to the Lord of Death?"
def mislead(x){
	Stark += Hodor;
	if(betray(ROWS) * TABLE[COLS * ( Sansa )][ROWS]){
	Stark /= protect(( -0.14 ));
	if(-protect(---Sansa,( Arya ),-TABLE[( bar(-0.49,TABLE[( COLS )][TABLE[foo()][Hodor]]) ) * dog][( ( bar() - -rule(bar(destroy(( 92 ),Stark) - Ygritte,COLS,1),( 270.63 / bar(-( ROWS / -ROWS / dog ),( betray() )) ),Hodor) * -COLS - rule(COLS) * ROWS ) )])){
	if(Arya){
	Hodor -= foo(rule(-betray(foo(),( ( 23 * foo(( rule(rule(protect(500.3307,-( ROWS )),-87 / -53),-y,x) ),( Jon )) ) )),-bar(bar(destroy(-bar(betray(foo(ROWS,( betray(0.25) )),foo(ROWS))),-1))),-1),Arya,COLS - -( rule() + ( Jon ) ));
	if(protect(---0.18,Arya,x)){
	23;
	Sansa /= TABLE[73][Arya];
	-0.38
} else {

}
};
	dog += ROWS
} else {
	mislead(y,( -0.28 ))
};
	Arya += 25
} else {
	TABLE[-37][( protect(1) )]
}
}
assert 1 : "One can not simply parse himself"
assert -bar() : "Winter is coming"
var Sansa = ROWS
def TABLE[x][k] {
	Jon += -960.332;
	Ygritte *= --66
}
var Jon = foo(destroy(-0.18) * -( mislead(protect(TABLE[Sansa][-rule(Arya)],x),-0.76) ))
def TABLE[ROWS][i] {
	Hodor += ROWS
}
def protect(x,Jon){
	if(-0.27){

};
	y -= TABLE[dog][0.61]
}
assert 1 : "Fear cuts deeper than swords."
def TABLE[-mislead(-0.92,( ( -( dog * ( -ROWS * protect(Ygritte,Sansa) + y * Hodor ) ) ) ))][k] {
	if(COLS){

} else {
	Stark -= TABLE[-490.9][ROWS];
	-0.66
}
}
def betray(y,Jon){
	if(rule(COLS - ( bar(( -( 0.38 ) ),( -( ( Sansa ) ) )) ))){
	protect(-dog)
} else {
	if(-0.95){
	0.76;
	if(( --( ( Jon ) ) )){
	Arya;
	dog *= ROWS * ( Ygritte ) + ---40.32 - 83
} else {
	y /= Sansa;
	x;
	y += ROWS
}
};
	protect(TABLE[destroy(73)][-68])
};
	-betray()
}
assert COLS : "One can not simply parse himself"
def TABLE[COLS][j] {
	rule(betray(COLS,y),-86) / ( -( bar(x) ) )
}
assert bar() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = Ygritte
def TABLE[81][j] {
	Hodor /= Sansa;
	x += protect(TABLE[-( TABLE[dog * -41][bar() / rule(( COLS ),dog)] )][rule(( COLS ))]);
	if(COLS / 0.66){
	Hodor /= -y;
	if(1){
	y /= Sansa;
	Arya /= foo(( -x ),-98);
	if(bar(( rule(Jon,( rule(-protect(-0.42,--920.3) * -Arya) )) * Stark / 22 / -950.715 / protect(protect(Sansa),15) ),Arya)){
	x -= rule(0.6,-destroy(( TABLE[-Stark][----x + x - -1] )),ROWS);
	-rule(--x)
}
} else {
	if(-510.3 - -ROWS + Stark){
	x -= 60.6143;
	-( COLS );
	Arya
} else {
	Ygritte += COLS + -30
};
	if(1){
	if(dog){
	Jon /= 85;
	if(protect(rule(bar(COLS,-23),Ygritte))){
	if(Sansa){
	dog += ( x );
	( -780.887 )
} else {
	if(Arya){
	Ygritte /= x;
	Hodor /= -Ygritte + dog;
	if(mislead(y,-ROWS,( 180.302 * x ))){
	Jon += -Arya
}
};
	Jon *= Arya
};
	if(( ( COLS ) * mislead() ) - -betray(-1 / -( mislead(( ( -0.88 ) )) ))){
	if(foo(Arya,x)){
	x += --Sansa;
	Jon /= Hodor
} else {
	if(bar(-250.7,Stark - -0.79)){
	if(betray(Hodor - betray(( -0.89 + x - foo(( foo(dog,bar(Ygritte + ( ( Jon ) ) - -ROWS / -( bar(( -0.4 ),-( ROWS )) - Ygritte ),-0.17)) ) / COLS) )))){
	Sansa /= -foo();
	if(mislead(Ygritte + -ROWS - bar(-1,--COLS),( -dog ))){
	-----35 - -y;
	if(-protect(( Ygritte ))){
	-19 / dog;
	dog += Ygritte
}
} else {
	if(x * --280.5 * protect(destroy(y,-15 + Jon),COLS)){
	y /= dog;
	if(4){
	ROWS
} else {
	Hodor /= -0.28;
	Sansa / bar();
	-0.11 + -630.1
}
} else {
	if(-Arya){

} else {
	y *= bar(-mislead(),y,-x * Jon);
	Jon /= -TABLE[mislead()][Stark];
	Ygritte /= TABLE[ROWS][TABLE[betray(-470.63,COLS * ( ROWS ))][( -COLS + -690.157 )]]
}
}
};
	Arya -= -Arya
};
	if(-Jon){
	Hodor - COLS;
	Ygritte;
	0.05
} else {

}
} else {
	if(foo(y,Jon,-970.23)){
	if(Jon){
	Stark -= -destroy(( ( -COLS / dog ) ),-80.33,destroy(TABLE[protect(bar(foo(destroy(COLS / ( -310.8 ),90.54)),COLS),Arya) * ( ROWS - -39 )][Arya * Stark],-0.05,( ( -protect(ROWS) ) )) / 0.63)
} else {
	x += -ROWS
}
} else {

}
};
	if(Hodor / Jon + y){
	-950.38
};
	Ygritte
};
	if(97 * Hodor + betray(bar(-20,TABLE[TABLE[foo(foo(-( -540.651 )) - COLS / 26)][-810.183]][ROWS]),destroy(protect(Ygritte,-1,( rule() - protect(mislead(Ygritte,Arya),-0.11) ))) / ( -x ),-Arya)){
	if(COLS){

} else {
	if(( -TABLE[destroy(y,COLS,ROWS) / Sansa][( ( ( -protect(mislead(3 + Hodor)) ) ) ) * COLS] )){
	y += -COLS;
	y -= ( betray() )
} else {
	if(Ygritte){
	if(-( COLS )){
	-( 0.21 )
};
	if(-0.97){
	if(Arya){
	if(40){
	Sansa /= Arya;
	if(Jon){
	1;
	if(75 - -1){
	rule(COLS * 29,Ygritte)
} else {
	if(--0.33){
	COLS - ( foo(TABLE[-85 * Jon / -Stark][--( -( -ROWS ) )],47) ) / ROWS
}
}
} else {
	if(-protect(mislead(-ROWS,( rule(--( -mislead(-( Stark )) )) ),---( ( 68 ) )),destroy(-( x )) / --640.3)){
	Arya;
	-Stark;
	if(42){
	if(dog){
	( -( Jon ) );
	y *= ( TABLE[-Stark][ROWS] )
} else {
	if(bar(dog + -destroy(bar(( Ygritte + -140.7 )),( foo(mislead(TABLE[betray()][( Sansa )],mislead(0.91) - -0.91 * Hodor) + 0.89) )),TABLE[ROWS][mislead(-91) * mislead(0.39,betray(protect(-ROWS),-95))])){
	protect() - dog * protect(Jon,-1 * Hodor);
	-43
} else {
	x *= -360.28
};
	Ygritte /= -TABLE[mislead(0.68,( TABLE[Arya][-foo(-0.67,-0.37)] - -TABLE[Stark][ROWS] / 0.28 ),destroy(rule(protect(-0.12),TABLE[-90][-Hodor]),( TABLE[-Sansa + dog - ( 24 )][-1] )))][( 1 )]
};
	--betray(-TABLE[ROWS][-88],y) / 1
}
} else {
	if(30.82){
	destroy();
	if(TABLE[COLS][-0.84]){

} else {
	betray(-79,1)
};
	if(x + ROWS){
	Jon /= TABLE[-Sansa][( ( Stark ) - ( ROWS ) )];
	16
} else {
	if(-( 1 )){
	--0.82
} else {
	y -= dog + --1 * Sansa
};
	if(Arya){
	( 510.9 )
};
	if(910.3){
	Arya -= -0.9
} else {
	830.822 + dog
}
}
} else {
	if(TABLE[( Arya )][ROWS - 0.47 - mislead(Arya,ROWS + rule(TABLE[-( COLS )][( COLS * -TABLE[Arya - ( ROWS ) / -( 1 * Jon )][ROWS] )] * Ygritte) * -0.81 / ROWS)]){
	if(x){
	if(x){

};
	-83
}
};
	Sansa /= ( mislead(destroy(29,COLS) - x,destroy(0.44,-0.92)) );
	( ( ( Ygritte ) ) )
}
};
	if(Sansa){

} else {
	Stark /= 87
}
};
	-( x / x )
};
	Jon *= -( ( -89 ) ) + ROWS;
	if(( -58 )){

}
} else {
	if(rule(Stark,TABLE[COLS][1],( ( protect() - -Hodor ) ))){
	if(destroy(-0.17,TABLE[0.11][-0.16] / --0.1 * rule(20,-x))){
	if(ROWS){
	Hodor += Jon / rule(( -y ),ROWS)
};
	-mislead(protect(ROWS,COLS,--protect(-( ROWS )) * ROWS),TABLE[58][Ygritte]);
	y -= --ROWS * ( TABLE[Arya][( -0.53 )] )
} else {
	y += TABLE[betray(-30,( Hodor ) + 25) / -x][Jon]
};
	x += 0.51;
	if(-Arya){
	Arya;
	if(TABLE[( ( ( TABLE[-dog][89] ) / protect() ) )][Hodor]){

} else {
	if(-0.96){
	Sansa /= ROWS;
	Sansa -= 33
}
}
} else {

}
}
};
	dog += bar(-0.44 / mislead(17) + ( Jon * -0.54 / --y + rule(bar(-bar() * 660.02)) / -19 * ( TABLE[Jon][( Jon )] + -x ) - protect() ),Jon);
	if(--96){
	-8;
	dog *= TABLE[81][-56 + Jon]
} else {
	-dog;
	ROWS
}
}
};
	if(mislead(TABLE[Sansa][-56 / ( COLS )],( x ))){
	if(TABLE[0][( ( protect(Arya) ) )]){
	if(--( y )){

} else {
	Arya *= 0.62;
	if(( Sansa )){
	rule(--( Arya ),-0.95,-mislead(mislead(COLS) + ( -45 )));
	ROWS
}
};
	y -= 87;
	ROWS
} else {
	y -= TABLE[Stark - protect(( rule(( ( -300.734 ) ) / -COLS - 0.75,-( protect(-87) ) * COLS,betray(COLS * ----bar(protect(-Hodor),protect(( -1 ),( 1 ) + -11),71) / --COLS * foo(-14) + TABLE[x][ROWS],Arya,foo(ROWS,( --1 - -foo() )))) ),95)][destroy(COLS)];
	if(( -TABLE[( -betray(Jon,-1) )][--0.51] )){
	Hodor += 95
} else {
	if(( TABLE[-1][( ROWS )] )){
	if(x){
	( protect() );
	Sansa -= x;
	destroy(protect(bar(),Arya),Sansa)
} else {
	if(( COLS )){

} else {
	if(-destroy(( -foo(( ( --TABLE[bar(TABLE[580.7196 * ( -0.18 )][TABLE[betray(1 * 0.97 / COLS,( -( betray() ) )) * TABLE[destroy(--0.99 + foo(( -16 ),Stark),1)][COLS]][Stark]]) + Sansa][Sansa] ) ) / -91,( bar(Hodor,( ( destroy(bar()) ) )) )) ),( betray(COLS,--0.56 * COLS) ))){
	-86;
	Stark += ( ( mislead(COLS,betray()) / ( Jon * -88 ) * COLS ) )
};
	-bar(mislead(),Arya)
};
	if(( Arya )){
	if(mislead(dog)){
	COLS;
	-COLS + y / ( -( mislead(-( dog )) ) )
};
	-rule(x)
}
}
};
	if(rule(Hodor + Arya,( protect() ))){
	Sansa -= TABLE[-0.58][protect()];
	Arya -= y * betray(rule(mislead(protect() + ( ( -y ) ),mislead(TABLE[( TABLE[Jon][( -COLS / -Arya )] )][dog * -290.91 + TABLE[( -390.1 )][Stark]])),330.4171 - -52 / ( -ROWS * COLS ) / TABLE[TABLE[-ROWS][950]][( -870.5 )]),( -0.7 )) * protect(bar() + Arya + ROWS * y * ( -0.2 )) + protect(( ( COLS ) ),ROWS);
	Sansa -= ( -TABLE[( Sansa )][x] * ( TABLE[y][( Hodor )] ) )
} else {
	Hodor -= TABLE[-0.28][( COLS - Arya )];
	if(-TABLE[-47 / Stark][100.987]){
	if(( destroy() / Sansa )){
	if(Sansa){

}
}
};
	Ygritte
}
}
};
	( --protect(x,-1) );
	Jon -= COLS
};
	if(( Ygritte )){
	87;
	92
} else {
	( ( ( rule(( foo(TABLE[COLS][--1],( Jon )) / ( -0.75 ) ) / y) ) ) )
}
};
	-betray(( ROWS ),--0.89,-0.2 / destroy(Arya,rule() - TABLE[---40 / betray(TABLE[-foo(( Stark )) + Sansa][mislead(( -betray(betray(),( ( x ) )) / protect() * -( -bar(( COLS * Sansa - ( COLS ) )) ) ) * --86,Hodor / -0.84) + x]) + Ygritte][TABLE[ROWS][TABLE[TABLE[dog][TABLE[Hodor][ROWS]]][COLS] / -68]] + rule(bar(),88,betray(ROWS + x,betray()))) / Hodor)
};
	Stark /= ( -310.9 ) * Sansa
}
};
	if(( 0.15 + --0.76 )){
	if(COLS){

}
}
}
} else {
	-Arya + ( -bar(( Hodor + ( TABLE[COLS][COLS + TABLE[Stark / -dog + ROWS][dog] / ( COLS ) / Hodor] ) / -mislead(COLS,Hodor) ),TABLE[Ygritte][bar(Jon,TABLE[( COLS )][1])],x) + foo(TABLE[Stark][25 * x],foo(-TABLE[COLS][-Arya]),rule(( Jon ),Jon - ( ROWS ))) - 90 ) + 0.37 + dog * ROWS
}
}
}
} else {
	Sansa -= -0.16
}
}
var x = y
def TABLE[( 57 )][k] {
	Arya *= -bar(( mislead(-Sansa,-20,protect()) ) + Stark)
}
var dog = protect(0.05 - Stark + COLS,-( Ygritte ))
def TABLE[rule(( --29 ),( Arya - -Stark ))][i] {
	dog += -Sansa;
	Ygritte *= ( -( ( destroy(-0.88) ) * -1 - -99 * 29 * ( protect(Jon) ) ) );
	Stark
}
def TABLE[-9][k] {
	Stark /= ( dog )
}
def TABLE[-76][k] {
	Sansa += -ROWS * protect(-29,-420.932) / Arya;
	if(destroy(-( Arya ),( TABLE[ROWS][Hodor] ) - ( ( 1 ) ))){
	if(COLS){

};
	x += ( protect(rule(-Stark,1 * -1),-1) );
	x *= ROWS
} else {
	if(COLS){
	if(17){
	if(-0.47){
	if(60.277){
	if(foo(-98)){

}
};
	Sansa *= mislead(x,-0.17)
}
} else {
	if(--570.75){
	if(COLS){
	if(( Arya )){
	y -= Stark;
	Ygritte *= x
} else {
	y += Arya;
	Stark *= -Ygritte
}
}
} else {
	Jon += x
};
	Hodor *= COLS;
	Stark
};
	if(( ( -0.39 ) )){
	dog += ( ( ( destroy() ) ) );
	if(TABLE[Stark + COLS][ROWS]){
	if(-1){
	COLS;
	if(( -( ( -1 ) ) )){
	-94;
	if(-0.41){
	if(mislead(COLS,( TABLE[mislead(COLS / -dog * -foo(1) - ( COLS ) * -1,y)][-99] ))){
	if(( ROWS )){
	dog += 62;
	destroy(0.37,TABLE[--1][mislead(-bar(( Sansa ),-( betray(-Hodor / -destroy(-0.29,( COLS )),destroy(ROWS,-0.11),( mislead(dog) )) )),( foo(TABLE[-0.89][0.32],foo(420.298),ROWS) ))],-TABLE[--COLS - ROWS * ( y ) * -1 / -0.27][dog * -ROWS - -4 / 850.51] / TABLE[26][dog] / -23 - mislead(-( foo(COLS - ( Stark ),mislead(ROWS,-0.69)) ),foo() + Arya))
};
	x -= --1
} else {
	ROWS
}
} else {
	if(-0.82){
	if(protect(Jon)){

};
	-( TABLE[-1][-580.877] ) + -0.03 + Jon
} else {
	if(ROWS + --1 / -9 + Jon){
	if(rule(dog)){
	Sansa;
	if(-0.32){
	Sansa *= rule(1)
} else {
	Sansa += TABLE[-1][-231 - Jon];
	betray();
	COLS
};
	Ygritte /= COLS
};
	-ROWS - ( 42 ) - ROWS
} else {

};
	if(140.1){
	ROWS
} else {
	Arya -= rule(( ROWS ) - TABLE[Sansa][-COLS + -TABLE[( mislead() )][Sansa]])
}
}
}
} else {
	y /= ROWS - protect();
	x += betray(TABLE[Jon][--ROWS],( TABLE[-0.27][destroy(-64,destroy()) * --0.87] )) + ( 780.4509 ) * destroy(( 0.89 ),0.5,Sansa)
}
} else {
	if(( bar(( ( -ROWS * betray(ROWS) ) )) ) / -ROWS){
	if(foo(rule(-30.2957)) * mislead(( mislead(--Jon,94) ),dog) + Stark * -TABLE[0.16][( --0.25 )] + COLS){
	COLS
} else {
	if(rule(-0.09) + -Jon){
	if(foo()){
	Arya -= COLS;
	dog -= -75;
	y -= -( bar(protect(-betray()) - betray(),--0.93,( rule(TABLE[protect(destroy(----( TABLE[--TABLE[( -0.96 )][( ROWS )]][-betray(( -ROWS / ( Hodor ) )) * bar(1,TABLE[-ROWS][Arya],-77) - --betray(bar(COLS - ROWS),-27,-y + --3)] ) / -mislead(( ROWS / x )) / 0.93 - TABLE[mislead(Arya)][-TABLE[y][( ( Jon ) )]] - foo(),dog),-0 + COLS)][0.37] - -0.09 - COLS,( -0.77 )) )) )
} else {
	Stark -= Arya;
	if(dog){
	if(( ( foo(-( -72 )) ) )){
	ROWS;
	ROWS / TABLE[( ( COLS ) )][( bar() )] * -1 * TABLE[bar(y / ( ( ( Sansa ) ) ),TABLE[y - COLS][19],( TABLE[-ROWS][bar(TABLE[( 440.163 ) / protect(72)][( -0.55 )])] )) / ( y ) / TABLE[ROWS * 95][TABLE[Stark][-mislead(ROWS)]] / -71 * 0.69][TABLE[0.16][-0.05]] * betray(y)
} else {
	ROWS;
	if(-810.76){

} else {
	Arya += Arya;
	dog /= -0.8
}
}
};
	Hodor
};
	if(mislead(ROWS,-mislead())){
	Stark -= Arya;
	if(-( dog )){

} else {
	if(0.5){
	-( Sansa )
};
	( Arya );
	TABLE[( -( bar(-65) + protect(( protect(ROWS) ),( y ),ROWS) / ROWS ) )][Arya]
};
	if(Jon){
	Sansa *= ( TABLE[TABLE[Arya][TABLE[foo(( -( 54 ) + -y ))][mislead()]]][87 + bar(-0.32,( bar(-ROWS,-y) ))] )
}
};
	-43
} else {
	Arya -= foo() - COLS;
	Stark -= -( 53 );
	-ROWS
}
}
} else {

};
	Sansa;
	---1
}
} else {
	if(( --68 )){
	y
}
}
} else {
	dog += 88
};
	if(protect(-mislead(),--( destroy(TABLE[( 0.35 / -( ROWS ) / -rule(Hodor) )][( rule(destroy(x,mislead(-protect(TABLE[Jon][protect(ROWS,mislead(-1))]) + ROWS - ( Arya ) + -0.94)),-890.03) )],ROWS) ) / ROWS)){
	y *= -y
}
} else {
	betray(( Stark ))
}
}
}
def protect(Ygritte,Stark,dog){
	--0.98;
	if(ROWS){
	Jon /= rule(( 68 / mislead(-( ( -COLS ) ),-mislead(1) + rule() * -850.13) ),TABLE[Ygritte][( bar(-Ygritte + ( 0.45 ),-destroy() / -1 - 400.31,rule(mislead(-0.36,230.42),35 - bar())) )])
};
	Jon /= Stark
}
def foo(Sansa,Stark){
	Ygritte *= -780.833 - -bar(Sansa,foo(ROWS),dog)
}
var Jon = ( ROWS )
assert betray(foo(ROWS,bar(0.43,-0.52)) / rule(TABLE[-( ( -1 + COLS ) )][COLS * Arya],-protect(---1 * foo(-( -betray(Jon * 1,59,Jon) )) / ROWS,betray(-Jon,destroy(( 150.7 ),ROWS),-( -( -2 - -0.42 ) ))) * ( 0.26 * ( -( -TABLE[TABLE[COLS][foo(Ygritte,Jon * TABLE[Arya + -310.264 + betray(0.36)][x + 6],-( TABLE[foo(-65)][( ( ( destroy(TABLE[( protect(COLS,-( Sansa )) ) - Hodor][ROWS],( COLS ) - betray(-0.34,0.26),-bar(Stark) + TABLE[-40.849][protect(--rule(Ygritte)) + -320.15]) ) / ( ROWS ) ) )] ))]][0.32] ) ) / TABLE[Arya][COLS] )),Stark) : "Nothing burns like the cold."
assert x : "Fear cuts deeper than swords."
var x = -960.81
def foo(dog,dog){
	mislead(betray(),TABLE[-Sansa][x] * TABLE[--Stark / Hodor - -( -TABLE[-53][ROWS] ) / ( bar(85,TABLE[Sansa][( 170.365 )],( 40 * ( ( 1 ) ) * betray() )) )][( ( bar() ) )])
}
def destroy(Hodor){
	( -900.335 / Hodor );
	Arya *= -( -mislead() / ( mislead(bar() + ( y ) / --0.19 - -Jon / --1) ) / ( TABLE[( protect(COLS,-0.21 * ROWS) )][Hodor] ) )
}
var Stark = ( -1 )
def protect(Ygritte){

}
def TABLE[0.05][k] {

}
var y = -ROWS
def mislead(Hodor,Hodor,Ygritte){
	-53;
	if(--1 / TABLE[-dog + -1][-1]){

} else {
	-rule(-( TABLE[-( x / Stark * destroy(1,COLS) ) * -0.76 - ----0.55 + -ROWS / Stark][--mislead(16,destroy(-0.49),rule(COLS,betray(( 0.89 ),Ygritte) * Sansa,dog))] ),mislead(-( Ygritte ),1));
	dog * Stark;
	if(Sansa){
	-0.55;
	( COLS )
}
}
}
def TABLE[Arya + -71][i] {

}
def TABLE[COLS][i] {
	Stark -= Jon / betray() / -0.91
}
def TABLE[Stark][i] {
	-1;
	mislead(-97,-1,( TABLE[( TABLE[TABLE[1][-0.75]][TABLE[rule(Arya)][--( foo(--x,COLS) )]] )][TABLE[( Stark )][( COLS + ( TABLE[( 7 )][rule(foo(-x * 940.756 / mislead(-250.81 * ( -2 ) - COLS)),( destroy(betray(-64,( TABLE[--Hodor][Arya] ),( rule(TABLE[destroy(protect(TABLE[rule(( rule(24,--68 - ( -1 ) / -Jon * ROWS,mislead(-1,Sansa,Hodor - ( 31 )) + ( x ) + mislead(Stark)) ),1,foo(( dog ),-68))][-( -0.92 )],bar(),Sansa),foo(Arya))][0.21]) ) / -x),destroy(-650.717)) ),COLS)] ) )]] ))
}
assert betray(COLS) : "Fear cuts deeper than swords."
var x = --( COLS + -mislead() )
var dog = Ygritte * COLS - -( y )
assert foo(TABLE[( Hodor ) / -820.2][TABLE[COLS + TABLE[-77 - mislead(mislead(COLS),-15)][( ( ROWS ) )]][ROWS]]) : "Fear cuts deeper than swords."
def mislead(Ygritte,Stark,Ygritte){
	-betray(COLS,rule(mislead(TABLE[Stark][-97])),mislead(( Ygritte )));
	-0.38
}
def TABLE[rule()][i] {
	if(-x){
	-COLS;
	Hodor -= ( dog )
} else {
	foo(-COLS);
	if(----( ( -80 ) ) / dog){
	if(-1){
	Jon -= -( 1 + protect(dog) * ---36 );
	if(foo(rule(),bar(destroy(-( 0.59 ),570.609,mislead(( Jon ) - 0.74 - mislead() / destroy())) / ( dog ) / -( -x * 650.505 - ( ROWS - ROWS ) - ( --ROWS ) )) + TABLE[( TABLE[ROWS][Stark + -0.91] - -0.56 + ( foo(-73,Jon * COLS / COLS) ) + --Sansa / ( Hodor ) * Arya )][Sansa])){
	if(--1 * TABLE[1][x]){
	bar(Hodor,Ygritte,( -rule(Stark,( Hodor + Arya - ( ( ( ROWS ) / -TABLE[foo(foo(dog + -0.59,Jon / 1,Ygritte),-x)][mislead(-19,-rule(ROWS))] - -88 / mislead(COLS) * -( ROWS ) * --0.74 ) ) ) - ( 0.41 ),mislead(--destroy(-1),y + --58 / ( ( 0.62 ) ),COLS)) ));
	Sansa += 100
}
} else {
	x;
	Arya -= ( --1 / ( mislead(TABLE[ROWS][( -1 ) - rule(0.74,ROWS,-ROWS)],( -COLS * Stark / betray(Sansa) ) * -23 / ( -( ( protect(TABLE[( Stark )][Sansa],betray()) ) ) * Arya - ( COLS ) )) + ( COLS ) ) + 0.93 ) / y
};
	if(-Stark){
	if(( --18 )){
	if(betray(dog) / x){
	16
} else {

}
} else {

};
	1;
	Ygritte *= bar(bar(-46,Sansa,-ROWS))
}
} else {
	Ygritte /= COLS;
	Hodor *= mislead(-Stark,( Sansa * destroy(470.213) - ROWS - Sansa ) + Hodor) + Hodor
};
	( -510.0339 )
}
}
}
def TABLE[--Arya * ( 200.335 )][k] {
	COLS
}
def TABLE[Stark][j] {
	--77 - TABLE[Arya][TABLE[betray(COLS)][ROWS]]
}
var Ygritte = mislead(( 0.19 ),0.9,--0.97) - ROWS
def mislead(y,Ygritte,Stark){
	TABLE[ROWS][mislead(Jon,( ( -ROWS ) / --1 ))]
}
assert bar(Hodor) : "Fear cuts deeper than swords."
assert protect(Jon) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = COLS
def protect(Sansa,Arya,Jon){
	if(-91){
	if(-( ( 570.32 ) )){
	Stark *= ( TABLE[betray(protect(-1 / TABLE[-TABLE[destroy(ROWS)][( -bar(( Stark ) * ( -( TABLE[--0.38][( Sansa )] ) ),ROWS * bar(-COLS,Hodor,Stark),--0.95) )]][-TABLE[0.9][ROWS]],betray(( 800.97 ),ROWS,dog)),-( mislead(rule(9 / -Jon),ROWS) + x ))][0.17] / 0.63 )
} else {
	if(0.33){
	( ( TABLE[mislead()][80 * betray()] ) );
	if(foo()){
	if(-93 - ( ( Sansa ) ) + y){
	--0.25;
	if(( ( y ) )){
	Ygritte *= COLS
} else {
	if(ROWS * ( ( ---ROWS + COLS / mislead() ) )){
	y -= x;
	foo(COLS,TABLE[COLS][Ygritte]) - COLS;
	if(--0.3){
	ROWS / rule(COLS)
}
};
	Ygritte
}
} else {
	if(x){
	Arya += Ygritte
} else {
	if(-1){
	if(280.2){
	TABLE[-670.467][Arya * ( ( betray(ROWS) ) )]
} else {
	if(-7){
	dog *= destroy(( --COLS ),destroy(bar(),82),( destroy(-ROWS) ))
};
	COLS / Sansa;
	if(ROWS){
	y -= rule(COLS - COLS,22) - ( ( Sansa ) )
}
}
};
	if(1){
	if(-1){
	if(( -32 )){
	y += ( 1 );
	-y;
	1
} else {

}
} else {

}
} else {
	if(Ygritte / ROWS / --Ygritte){

} else {
	-0.4;
	if(( TABLE[bar()][0.41] * ---60 * betray(COLS,rule(( -y ),-rule(--77 * ( foo(( TABLE[0.64 / ROWS * 0.37][--COLS * ( COLS )] ) * Jon,Stark) ))) * COLS) + x )){
	Sansa /= ( 60 ) / -770.597
} else {
	COLS
};
	dog *= -betray(-66,COLS,( ( Arya ) )) / -1000.849
};
	Ygritte *= mislead(Ygritte,0.26,-mislead(-330.958 / -0.5,rule()));
	if(mislead()){
	if(foo()){
	( ROWS * ( ( -30.65 ) ) )
} else {
	y *= TABLE[44 + ( COLS )][Stark];
	-0.19
}
} else {
	if(TABLE[COLS][ROWS * -foo()]){
	-0.84;
	1
} else {
	-24
}
}
}
};
	x *= x
};
	if(bar(bar(destroy(bar(52),COLS / destroy(49,Hodor),( ( ( ROWS / betray(COLS,mislead(-170.723,83,( -1 ))) ) ) + -destroy(TABLE[-0.61][0.13 + Jon + ( -52 )],Sansa) * COLS ))),ROWS)){

} else {
	if(-0.59){

} else {
	Ygritte;
	if(Sansa){
	52;
	0.58
} else {

}
};
	-( mislead(86 - TABLE[-14 * Stark - foo(betray(-57),-TABLE[( destroy(-TABLE[x][( ( protect() ) )] + -protect(Jon,-1) / Jon) )][( --4 )]) * ROWS][( mislead(COLS,1,--Stark) )],( Stark )) )
};
	if(0.42){
	ROWS + bar();
	COLS
} else {
	Stark /= TABLE[( Jon )][Jon]
}
} else {

}
} else {
	-( Stark )
};
	if(y){
	if(-58){
	if(TABLE[TABLE[Hodor][foo(ROWS,protect(( dog ),( -0.33 )))]][--710.8] * protect(COLS,41 * Sansa + -----betray(Stark)) - Sansa){
	Ygritte -= TABLE[( mislead(-91,Hodor,destroy(( --1 * -protect() * -19 * COLS ))) )][TABLE[Jon][x]];
	Sansa += destroy(TABLE[Jon][( bar(--420.439,--23) )],-rule(0.82),-( ( ROWS ) ) + ROWS) - dog * mislead(Stark / destroy(mislead(-30),protect(-1 + ( -77 )),-dog));
	if(y + y){
	if(-TABLE[bar(-0.5,( --1 ) + bar(Arya,( ( TABLE[0.96][TABLE[-( ( -( Stark + ( Hodor ) + -TABLE[450.8][-420.9] ) ) * ( COLS ) * rule() )][ROWS]] ) )),betray()) + ( ROWS ) / betray(dog)][rule() * -( --Hodor + -destroy() - -Stark ) * Stark]){

} else {
	Sansa -= 8
};
	if(( ROWS )){
	Jon += destroy()
};
	y *= -( ( ROWS ) ) / 1 / betray()
}
} else {
	if(Ygritte * -foo(-1 * ( bar(TABLE[betray(Stark)][( ( ROWS ) ) - destroy(-0.59 / mislead(( ( x ) )),betray(0.72))],rule(COLS,( Stark )),--100.3 / -( -53 - -0.86 )) ) - Ygritte,--0.52 * --91 / mislead(Sansa,x) / destroy(ROWS))){
	Hodor += -710.55
} else {
	-y
};
	if(dog){
	Hodor -= destroy(( -1 / ( ROWS + TABLE[dog / -0.82][( COLS - Jon ) + -0.77] - -y * -( TABLE[-TABLE[dog][mislead(Sansa,ROWS)]][COLS] ) ) ),destroy(0.49,( TABLE[Sansa - ( TABLE[ROWS][-0.72] * ( rule() ) )][dog] ),--0.94));
	ROWS;
	Sansa -= TABLE[dog][ROWS] * ( protect() ) * COLS
}
};
	if(x){
	Ygritte /= 0.14;
	Ygritte /= 0.54;
	if(dog){
	Stark += ( protect(protect(COLS - -Sansa,bar(),-( -0.58 / ( 47 - protect(-TABLE[COLS][destroy(betray(Ygritte + mislead(--TABLE[( ( COLS ) ) - destroy(-50,-69)][COLS])),rule(foo(( ( dog ) ))) / COLS)]) + -Stark ) )) / COLS) );
	if(Stark){
	Stark *= foo()
}
}
}
};
	rule(( Arya ),Hodor,( ROWS )) / y * destroy(--0.15 - foo(),( COLS ),COLS) / destroy(-y)
} else {
	if(Arya){
	Ygritte *= ( -COLS );
	x += ( -ROWS ) / x
} else {
	-Arya;
	-96 - x
}
};
	dog -= -0.7
}
}
}
def TABLE[TABLE[Jon + -0.17][Ygritte + ( COLS ) - 93 / 69]][i] {
	if(Hodor){
	if(--26){
	if(( ( dog / ( Sansa ) ) )){
	TABLE[TABLE[y - ( protect(dog,rule(COLS,( 76 ),( dog )) + -1 * 0.14) )][protect(x,protect())]][( protect(ROWS) )];
	y += --dog
} else {
	if(( protect(TABLE[91][COLS * -0.78],COLS) )){
	Arya *= ROWS;
	if(y){

};
	190.9
} else {
	0.79
}
}
};
	if(COLS){
	Ygritte += -0.53;
	if(( rule(y,1) )){
	Ygritte
} else {
	Sansa += x
}
} else {
	Ygritte /= ( TABLE[TABLE[1][ROWS]][TABLE[COLS][betray(( -TABLE[-37][Jon] ),( y * -Stark ),ROWS)]] * 0.25 / foo(-1) - Stark );
	Stark - COLS
};
	if(destroy(TABLE[-( 1 )][Ygritte],TABLE[-ROWS - ( Arya )][TABLE[COLS][--mislead(( --0.62 * TABLE[( -890.6 / 75 )][( TABLE[Hodor][-foo(Ygritte)] )] ))]],COLS / ( 590.3 ))){
	y;
	betray(( rule(TABLE[betray(TABLE[bar(ROWS / -4)][protect(-1,( Hodor ) * COLS,--1)])][-TABLE[COLS][y]],( COLS )) ),0.81)
} else {
	-0.48;
	if(TABLE[bar(--rule(41,--82 * ROWS) - ( ( -Stark - COLS ) ))][( 810.8 )]){

};
	rule(-1) * foo()
}
} else {
	TABLE[Stark][( y )]
}
}
def betray(){
	if(( Ygritte ) + 1){
	( ( -37 ) );
	Arya += -Sansa / -85;
	Stark /= betray(destroy(0.63),Sansa,ROWS)
};
	Hodor -= Hodor / 0.15 + COLS;
	COLS
}
var Stark = Arya / ( -ROWS )
def protect(Ygritte,Sansa){
	if(ROWS){
	--( protect() );
	if(x){
	Arya -= 480.36;
	if(Sansa){
	Sansa /= -( ( -0.01 ) );
	0.76
} else {
	-97;
	Sansa
}
};
	x /= Arya
} else {
	if(-160.72){
	x /= ( -( Stark ) )
};
	( ( -10 - ( protect() ) ) ) / -( x ) - -Arya
}
}
var Hodor = ( ROWS )
assert 0.64 : "What do we say to the Lord of Death?"
assert foo(Jon,( ( COLS ) )) : "One can not simply parse himself"
def bar(Stark){
	x *= Stark
}
def TABLE[destroy(-780.389)][i] {
	Sansa += dog
}
def TABLE[-mislead(x * destroy(1,rule(( 65 ),y)))][k] {
	dog *= 1;
	Stark += -1;
	Ygritte /= y
}
assert Arya : "What do we say to the Lord of Death?"
def TABLE[--COLS * rule(-foo(),0.13,destroy(ROWS,-rule())) / --protect(--Hodor / dog)][j] {

}
def mislead(Hodor,Sansa,Stark){
	Stark -= TABLE[foo()][( x )];
	if(y){
	( ( ( 44 ) ) )
}
}
def TABLE[TABLE[TABLE[COLS][Jon]][dog]][j] {
	530.296;
	if(-1){
	if(protect()){
	if(ROWS){
	if(-0.18){
	94;
	y *= TABLE[( Arya ) * bar(x,x)][-TABLE[( ( ROWS ) )][( -( -0.18 * ( ( ( betray(bar(COLS,-Arya)) ) ) + ( TABLE[TABLE[TABLE[ROWS][0.59]][( rule(Hodor,y,-Sansa) )] / --y - -940.16 - -( 67 ) - -0.26 / Jon][COLS - ( Ygritte )] ) ) * ROWS ) )]]
} else {
	Stark -= ROWS;
	x /= -ROWS
};
	78
}
};
	if(bar(----98 + -28 - TABLE[( COLS )][rule(Stark) + Jon],59,-( -( TABLE[( ( x ) )][( foo(--( -protect() ),betray(y - betray()),-x * ( -70 )) )] ) * protect(76) ) + COLS)){
	-0.97;
	0.89;
	y *= ( ( foo(-( bar() )) ) )
}
}
}
assert ( --( 16 + destroy(--35) ) ) : "Nothing burns like the cold."
assert --80 : "Winter is coming"
assert ( destroy(-0.15) / -670.142 * y * 0.22 ) : "Winter is coming"
assert ( -foo(foo(( -Ygritte )) * betray(Ygritte,0.85,-ROWS),betray(bar(( --( protect(Arya) ) * bar() ),-( -41 )),( -COLS * -1 ) + ROWS),-( ( ROWS ) )) ) : "What do we say to the Lord of Death?"
assert Hodor : "Fear cuts deeper than swords."
var Arya = ( protect(--0.72,COLS) )
def TABLE[-Ygritte][i] {
	-TABLE[COLS][-betray(mislead(( 37 ),( Stark )))]
}
def mislead(){
	if(betray(( ROWS ),betray() + ( betray(foo(-foo(dog),Hodor),--0.55) ),( TABLE[780.4879][mislead()] )) + -1){
	dog /= rule();
	y *= ( -y );
	Hodor += -0.56 / protect(Stark + foo(x,Sansa),Sansa) * betray(dog)
} else {
	Hodor -= Ygritte;
	Hodor += 0.2
};
	x /= betray(--470.557 / ( -0.77 ) * 0) / ( ( ( betray(Sansa) ) ) ) - -63 - ( protect(mislead(rule(1),-1)) );
	COLS + Arya
}
assert -28 : "One can not simply parse himself"
var y = TABLE[--0.48][foo(ROWS)]
def foo(dog){
	if(Jon + ( foo(betray(TABLE[0.31][-betray()],betray(-30)),-1 * bar(-( dog ) / COLS),ROWS) ) + bar(( TABLE[Stark][-53] )) + -( Stark - -46 ) * TABLE[ROWS][foo(35,47,mislead())]){
	Ygritte
} else {

};
	if(bar(( Ygritte / COLS ) + COLS,ROWS,53)){
	0.79
} else {
	-destroy(-0.57)
}
}
def mislead(){
	if(-1 + -470.94 * -TABLE[--rule(--1)][protect(( -1 ),TABLE[betray(-0.19 * -1)][TABLE[COLS][foo(foo(( -91 )),bar(62) + --91) * foo(( ( ( COLS ) ) ),-960.44)]])]){

} else {
	Hodor /= 0.39
}
}
def TABLE[TABLE[protect(0.48,Ygritte)][--52]][j] {
	TABLE[COLS][47] / ( ( ( y ) * Jon ) )
}
def TABLE[Arya][i] {
	if(Stark){
	if(Ygritte){

}
}
}
var dog = -1
var Hodor = ( ( 0.74 * Jon ) )
var Sansa = rule(( ( 0.39 ) ))
def TABLE[-1 + Hodor][j] {
	if(-82){
	Ygritte += betray(-ROWS);
	COLS
}
}
def destroy(dog,Jon){
	COLS;
	Ygritte -= -560.59
}
var y = ( -4 / destroy() )
def foo(){
	if(ROWS){
	if(COLS){
	if(COLS){
	Hodor -= -rule(mislead(( ( Ygritte + ( 0.46 ) ) )),( ( ( destroy(rule(foo(dog)),-7 * bar(TABLE[TABLE[rule(---TABLE[340.3138][mislead(destroy(( Stark )) / 1,Ygritte,( Hodor ))] + ( ( -( --( ( -Hodor + foo() ) ) + -51 ) ) ),34)][-( 95 + -betray(Jon,-0.01) )] * y / 62][rule(-y * -27,( 84 - Sansa - 68 ))],x,bar(( ( COLS ) ),COLS))) ) + ( protect(( ROWS ),( y ),bar(( 94 ),x)) ) - ( y - foo(mislead(Sansa,( -Hodor * foo(COLS) / Jon )),( Hodor )) ) ) ),( Hodor )) * COLS + Arya;
	if(Sansa){
	Hodor /= rule(COLS * ROWS,COLS / foo(TABLE[COLS][mislead(Arya,protect(rule(rule())))],ROWS,bar())) / Sansa + -Stark
}
};
	dog *= -Stark / -10;
	Sansa += ( mislead(-foo(( betray(rule(),-4,Sansa) ))) )
} else {
	Arya *= -TABLE[-( COLS ) * Hodor][ROWS] * --44;
	rule(rule(Jon,ROWS * -( 67 ) + y))
};
	if(ROWS){

};
	-( -600.522 )
} else {
	( TABLE[( bar() )][( COLS )] );
	Ygritte
};
	Stark /= betray(( -4 ),TABLE[--protect(-TABLE[destroy(protect(betray(--TABLE[-83][-COLS],ROWS / 0.2 + COLS + -47) + -Stark),bar() - ( x ),( -130.8116 )) + -Jon * -mislead(( betray(destroy(),ROWS) )) * COLS][-64] / betray(ROWS),mislead(COLS * ROWS,-Sansa),--destroy(ROWS))][protect(-790.2)],59 + protect(y,-( protect() )) + ( foo(mislead(destroy(destroy(-ROWS,( -x ) + COLS * foo(( -( --0.93 ) )),Arya),( TABLE[---1][79 + mislead(dog)] ) + -58,( ( ( -27 - Jon ) ) )))) ) - -y)
}
var Ygritte = ROWS
def rule(){
	Arya += COLS
}
def TABLE[rule(Ygritte + ( Stark ) + 13,( Ygritte ),x)][j] {

}
assert destroy() : "Nothing burns like the cold."
assert -260.9474 : "Nothing burns like the cold."
def TABLE[bar(rule())][i] {
	dog *= -16
}
def TABLE[ROWS][i] {
	if(( ( ( 0.4 ) ) ) - ROWS){
	Jon += TABLE[x][foo(mislead(-bar()))]
} else {
	Jon += 480.1;
	if(mislead(ROWS)){
	protect(( COLS ),x,Jon);
	Hodor -= ( -( TABLE[( ( 44 ) )][protect(( -12 ),--bar(( 0.4 ),ROWS) / dog + -( 0.96 * y ))] ) );
	Ygritte
} else {
	( ( destroy(-1) ) )
}
}
}
def TABLE[Ygritte][i] {
	if(y / 52 + bar()){
	---TABLE[bar(TABLE[-COLS * -rule(Arya,1)][TABLE[( -destroy() )][-67] * x * --( x ) * COLS],--Stark * 17 / -rule(betray(-COLS,Stark,x),TABLE[destroy(Jon,( ( -24 ) + ( TABLE[51][mislead(destroy())] ) ))][-730.42],-( 81 ) - COLS - -( rule(Hodor + 1,Stark,Arya) )))][52] - -Hodor + foo() * 0.69;
	Stark /= -( ( COLS ) );
	destroy(Jon + --1,bar())
} else {
	y += -( mislead(( mislead(Hodor,-Stark + destroy(TABLE[x][Jon],40.16 / y + destroy(TABLE[TABLE[840.7 - -Sansa + Arya][-970.809]][Arya * -( dog ) * Ygritte - ---mislead(1,Hodor) * ( Hodor ) - Jon / -x],Arya) - --TABLE[protect(Jon,-( ROWS ))][-mislead(-Arya * foo(( COLS ),COLS / -1,-75) + bar(ROWS))] / COLS - 910.576 * ( protect(ROWS,-COLS) ) + y / dog) - ( dog )) ),( 0.05 ),Arya) );
	mislead(-COLS,( -( x ) ))
};
	ROWS
}
def mislead(dog,y,Sansa){
	Hodor
}
def TABLE[COLS][k] {

}
assert COLS : "Fear cuts deeper than swords."
def TABLE[destroy(ROWS,---dog)][k] {
	if(950.212){

}
}
var x = --dog * 0.9 + 80 - x
var Jon = ( Jon )
assert ( ( ( --COLS + ROWS ) ) ) : "Nothing burns like the cold."
assert -COLS : "What do we say to the Lord of Death?"
def foo(x,Stark,Arya){
	Ygritte += ( Jon )
}
def mislead(Hodor,Arya){
	if(destroy(-COLS,Jon)){
	dog /= ( y );
	Stark -= -( ROWS )
} else {

}
}
assert ROWS : "Fear cuts deeper than swords."
var x = ( ( -27 ) )
var x = --79
def mislead(Ygritte){
	Sansa
}
var Ygritte = Ygritte / ROWS / 0.28
assert betray(x) : "What do we say to the Lord of Death?"
def TABLE[mislead()][k] {
	Ygritte -= -TABLE[mislead(( COLS * -0.84 / Arya ))][( --650.881 )];
	if(1){

} else {
	x += dog;
	y -= ( ROWS )
}
}
assert betray(32 * 1,-bar(Ygritte / 1,94)) : "What do we say to the Lord of Death?"
def mislead(Hodor){
	y;
	if(Stark){
	rule(foo(-Hodor,betray(31,-ROWS,( ( Stark ) * ROWS ))),( betray(foo() + -0.77) ));
	0.56;
	Hodor *= -5
}
}
var Stark = -betray(TABLE[foo(Hodor,TABLE[( betray(Hodor,rule(rule(-0.84),y),( COLS ) / mislead(-rule(),Hodor - ( foo(betray(TABLE[-0.29][y],-Stark,dog) / TABLE[( Stark )][-( ( TABLE[TABLE[Stark][COLS]][protect(-1 / ( TABLE[bar()][-0.74] ),COLS)] ) )],--COLS * betray()) ))) )][destroy(bar(),bar(( COLS )),TABLE[--( -10.36 ) + ( -40 ) / -Stark][COLS])])][( ( y ) )])
def foo(dog){
	Jon /= rule(-920.082,COLS);
	betray()
}
def TABLE[TABLE[Stark][-Stark]][j] {
	x *= x;
	if(destroy(1)){
	y -= ( TABLE[-COLS][( Stark )] );
	if(y){
	-0.27;
	Ygritte *= mislead(( ROWS ))
}
} else {
	if(protect(-( 0.46 ))){
	protect(-0.56,( Stark ));
	( betray(COLS,45) )
};
	if(-( -150.522 )){
	Jon -= COLS;
	if(rule(destroy(x,( TABLE[-1][ROWS] )),-COLS - ( Stark ))){
	( ( Jon ) )
};
	dog -= protect(-dog * x,TABLE[-( ( --( COLS ) ) )][Arya],TABLE[-( bar(( COLS ),-TABLE[-870.4][-0.24]) )][Jon]) / betray(-0.66)
}
}
}
var Stark = Jon
var y = ( protect(( -860.63 ),protect()) - -y )
var Hodor = x
var Hodor = y
var Hodor = ROWS
def rule(dog,x,Arya){
	( -1 * -x - 430.26 )
}
def betray(){

}
assert ( 1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[bar()][j] {
	Hodor += ( -( rule() ) );
	Hodor += -mislead(Jon)
}
def TABLE[Arya][k] {
	Hodor *= COLS;
	x += Hodor
}
def TABLE[1][j] {
	( -710.7 + x * ROWS ) * dog;
	( ( y ) );
	if(TABLE[-64][Ygritte]){
	if(dog){
	if(-foo(Jon,COLS)){
	Hodor += Arya;
	dog *= mislead();
	TABLE[ROWS][-TABLE[22][( ( -bar(foo(betray(( ROWS ) + -0.21) - 560.1 / rule(TABLE[( ( -( ( ROWS + ( ( ( -( ( 230.2 ) ) - ROWS * betray(---bar(-0.63 / destroy(bar(dog,ROWS)),-ROWS) * COLS,-1) ) ) ) + -920.7755 ) * rule(ROWS,dog) - ( mislead(( Jon - destroy(90.714 / -0.29,x,0.71) ),1) ) ) ) * ( bar(COLS,-( ( ( --Stark ) ) ) + ( TABLE[dog][-0.76] ) + -0.06,y) ) )][betray(x,( x ))]) * ( mislead(betray(Stark,COLS)) ),foo(Ygritte),-74)) ) )]]
};
	if(-20.6354){
	protect(Stark)
} else {
	if(mislead()){
	y -= 64;
	if(( -690.583 )){

}
} else {
	Stark
}
};
	if(10.2566 * x){
	if(-6){
	foo(-Stark + Jon - destroy(( TABLE[( TABLE[-36][( --COLS )] )][dog] )) + ( -38 ),ROWS);
	if(dog){
	y -= -( 1 ) - TABLE[Arya][Arya];
	-0.83
};
	y -= Arya
} else {
	if(y){
	( protect(0.69) );
	Jon -= -0.66;
	( Stark )
} else {
	protect(TABLE[( ---0.93 )][COLS],Sansa)
};
	Stark -= x;
	dog
};
	-38;
	if(COLS){
	Arya + Sansa * 90;
	ROWS
}
} else {
	y *= COLS
}
};
	Hodor /= COLS;
	TABLE[63][COLS]
} else {
	if(dog){
	Sansa += ( rule(38) );
	x -= --x / protect(protect(Arya,-89),protect(Ygritte * destroy(),foo(1)),foo(( -ROWS ),Arya) / Sansa);
	-COLS
}
}
}
var Sansa = ROWS
var Stark = -0.63
def TABLE[-40.835][j] {
	if(ROWS){
	protect(COLS) + COLS * destroy(( ROWS )) + 24 / 28 / Jon + ROWS;
	Hodor -= 490.77
} else {
	if(( foo(x,-TABLE[Ygritte][dog],mislead(870.903,TABLE[y][protect(COLS,Hodor)],COLS / ( betray(destroy(( COLS ),Jon,bar(-0.91,-( 60.17 + betray(COLS,1) - mislead(rule(-90,COLS),bar(destroy(----TABLE[Hodor][bar(( 1 - ( -COLS ) ) / -( ( ROWS - -Jon ) ))] + COLS / -59 * -99,COLS,TABLE[y + x][x]) / betray(bar(( Sansa * mislead(Sansa,--bar(-610.819,--0.54),bar()) ),-70,betray(Hodor))),( rule(Hodor,y) ))) ),rule(TABLE[mislead(-0.6,COLS * COLS)][protect(protect(-mislead(mislead(COLS - ( dog ),2))),-73) * ( dog )]))),TABLE[-TABLE[( rule() )][Hodor - -protect(x,( COLS ),x / ---TABLE[-220.5][bar()])] - Jon - ---COLS - bar(Hodor - foo(-COLS),( -betray(foo(foo(COLS * dog,bar())),( 56 / ( ( ( rule() ) ) ) )) ))][( Sansa )],foo(Jon,( destroy(( ( ( --0.38 + -( -( -27 ) * COLS ) * foo(0.34) + -x / 0.44 ) ) ),( ( ( x ) ) ),Ygritte - --TABLE[Stark][( ( TABLE[Arya][Arya / x] ) * Sansa * Ygritte + -1 )]) ))) ))) )){
	if(-( Hodor )){
	if(-340.97){

} else {

};
	y *= --( foo(-( x )) );
	if(TABLE[COLS][( protect(22 + 0.31,mislead(( 880.361 ),x)) ) * -x + destroy()]){
	dog -= Hodor;
	if(bar(x,foo(-( Ygritte )),( ROWS ))){
	if(Stark){
	x -= 0.12
}
}
}
};
	-1;
	if(ROWS){
	-0.31 + foo(ROWS,0.22,COLS) / Sansa;
	if(foo(-Arya + -dog,TABLE[( -destroy(--0.56 / dog) )][Hodor])){

} else {
	Ygritte -= ROWS;
	x += ( Sansa / ROWS )
};
	dog -= ROWS
}
} else {
	Hodor += ROWS
};
	if(-destroy(foo(dog,protect(-betray(-foo(destroy(-150.103)) / rule(bar(-0.17,--0.87,COLS)) + ( protect() ))),( ( ( protect() ) ) )) - ROWS,( --( Stark ) ),bar(Stark))){
	( ROWS + TABLE[( COLS )][0.04] + ( -0.93 ) );
	y *= -0.44
}
}
}
def TABLE[ROWS][i] {
	if(ROWS){
	Hodor
}
}
def protect(y,Stark,Ygritte){
	-Jon
}
assert COLS * protect(( TABLE[foo(x)][foo(destroy(dog,( bar(bar(-( ( -bar(COLS,( destroy(bar(Ygritte * ( y )),-COLS) )) - ROWS - Sansa ) )) + 41 / -1,ROWS) )),COLS,ROWS)] ),y) : "Winter is coming"
def bar(Hodor){

}
var y = ( --0.19 )
var Sansa = -( ( -Ygritte * ROWS ) )
assert -0.25 / -y - 30.871 * Arya : "Winter is coming"
assert -ROWS * protect() : "One can not simply parse himself"
def betray(Hodor){

}
def TABLE[340.42][j] {
	if(0.14){
	-foo(TABLE[dog][mislead(-1,rule(-( rule(-520.877) ) + COLS,( --( -TABLE[Stark][-rule(betray(Hodor / ROWS * Sansa,33,protect()),-( TABLE[destroy(Ygritte,ROWS,( -Jon ))][-rule(-570.4848)] ),Stark) / COLS] ) / ( -280.3472 - ( Stark ) ) ),-1 * 90))],x,( mislead(Sansa,-0.78,protect(ROWS * TABLE[--33][-0.59 * ROWS]) - bar(dog / Ygritte,COLS,rule(ROWS,-0.69,0.25))) ));
	Arya -= rule(Jon + Sansa) * -Hodor * rule(--0.59 + ( 0.23 ))
}
}
def TABLE[-TABLE[16][( Ygritte )]][k] {
	if(--440.32){
	if(mislead(Hodor,COLS)){

};
	if(-86){
	bar(( ( ROWS ) ),Sansa,Stark * -Stark)
};
	Sansa -= bar(--( 0.77 ) / 42 + ( ( --foo() ) * -( ( ( ROWS ) ) ) * 1 ) - TABLE[ROWS][-22] / 0.68,ROWS)
} else {
	--58 - ( rule() ) - -( -TABLE[( -mislead(COLS,-0.33 + bar()) / ROWS - ( ( bar() ) ) - 860.8786 * ( Arya ) )][TABLE[protect(81,Jon,-0.91 - y) - x][ROWS]] ) / ( ROWS ) / COLS;
	( -710.514 )
};
	Sansa *= ROWS
}
assert COLS : "Fear cuts deeper than swords."
var Hodor = protect(COLS,( 0.44 ))
var Jon = Sansa
def TABLE[bar(destroy(),-( y ))][i] {

}
var Sansa = Sansa
assert -1 : "One can not simply parse himself"
def TABLE[1][j] {
	Stark *= -( dog );
	Ygritte += -( -TABLE[protect()][( ( Ygritte ) )] ) - foo(TABLE[dog][-( -ROWS ) / bar(ROWS)] / COLS,( -( Sansa ) * 1 )) * TABLE[y + ( --COLS * -1 )][( Ygritte )] * y
}
assert TABLE[betray(( COLS / ( ( -protect(protect(ROWS,-y),-0.99) / COLS ) ) ),--COLS)][protect()] : "Fear cuts deeper than swords."
var Stark = Jon
assert ROWS : "Winter is coming"
assert -( destroy(destroy(77) - -Stark) ) : "Nothing burns like the cold."
var Stark = ROWS
assert -ROWS : "One can not simply parse himself"
def protect(x){
	Sansa -= -betray(TABLE[( ( ( mislead(( ( -21 ) ) * dog) ) ) )][dog],-67);
	bar(-( foo(TABLE[-TABLE[( rule(bar(( Ygritte ) + ROWS,620.1,ROWS)) )][TABLE[( -( ( -0.97 ) ) )][Stark]]][-( TABLE[COLS][-Sansa] ) + ( betray() ) / -bar(ROWS)] + 0.23,y,rule(Arya,-1) / COLS - ( 190.0722 )) ))
}
assert ( rule() ) : "Winter is coming"
assert ( --TABLE[TABLE[betray()][protect(TABLE[-dog][Arya],bar(( ( TABLE[-Ygritte][Jon] ) )),destroy(-1,mislead(--0.58)))]][Ygritte] / -y ) : "Winter is coming"
def TABLE[Jon][k] {
	TABLE[COLS][betray(Arya)] - TABLE[Sansa][630.33]
}
assert destroy(Ygritte) : "Winter is coming"
def TABLE[Hodor][j] {
	dog += -Jon * ( rule(( ( destroy(-bar(foo(1,ROWS / ---y - ( ROWS / ( bar(Stark,( ( bar() ) )) ) ) + Hodor - -60 + 1),-Stark) - ---0.17) ) ),( mislead(x,( -bar(-0.54) )) )) + -( foo(x,x) ) )
}
def protect(Sansa,Jon,Stark){
	if(COLS){
	Arya += -0.43;
	ROWS
} else {
	Hodor -= -y
}
}
assert betray(bar(-1,ROWS,( ROWS )),( ( -foo(protect(( mislead(bar(TABLE[820.7][-Stark],---0.17),-Sansa) - -1 ),( ( -0.64 ) ),COLS),-( -95 )) ) ) + x) : "Winter is coming"
def TABLE[0.32][i] {
	x /= --85
}
var Jon = Jon
def TABLE[-COLS][j] {
	if(x){
	if(-0.23){
	dog -= -COLS;
	if(( -1 )){
	Arya;
	if(ROWS){
	if(ROWS){
	if(( rule() ) * Stark / rule(( ( ( x - ( -betray(dog,140.553,-rule(( ( -( 31 ) ) ),-38 + ---0.06 - Hodor)) ) ) ) ) / Ygritte,betray(( Hodor ))) * TABLE[-63][-16]){
	x -= -0.49;
	if(y * ( -destroy() )){
	Ygritte += TABLE[COLS][-580.03 + destroy(rule(ROWS,Sansa),-COLS,-0.69) + 4 * -bar(( COLS ),( ( ---17 / -COLS - destroy(-COLS - TABLE[COLS * 0.85][dog],foo()) - ---y ) ))]
} else {
	if(ROWS - Hodor){

}
}
} else {
	Stark *= 0.81;
	if(COLS){
	-0.04
};
	( ROWS )
};
	dog += Ygritte
}
}
} else {
	( TABLE[( mislead(COLS,Stark,ROWS - TABLE[-54][-1]) ) * x][--ROWS] );
	( foo(-1,rule(x,ROWS) + COLS,COLS - 1) )
}
};
	y /= COLS
} else {

};
	( ( ROWS + ( -( 55 ) ) ) )
}
def TABLE[-0.37][i] {
	if(COLS){

} else {
	if(-0.62){
	Arya /= -450.3 + ( COLS ) - -( Sansa );
	bar(( COLS ))
};
	Stark
};
	Hodor *= -40 * y
}
var Hodor = ROWS
var y = Sansa
assert ( Sansa ) - -COLS + mislead(destroy(0.62) + -0.53,TABLE[-protect()][17] + --( 0.5 - -1 ),-( x )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][j] {
	if(( Sansa )){
	Hodor
};
	if(betray(( ( TABLE[-9 / ( COLS )][betray(-Sansa * x,-58)] ) ))){
	Sansa *= ---0.95 * protect(mislead(( ( -betray(( TABLE[Arya * -Jon / -0.59 + -COLS][-0.65] ),ROWS / TABLE[-0.6][62],-( Jon )) ) ),dog) - -5,-ROWS);
	if(( TABLE[foo(Jon,-bar(( TABLE[TABLE[-0.34][-710.172 - bar(( TABLE[( 1 )][--( Sansa )] ),TABLE[mislead(( mislead(Ygritte) ),ROWS)][( COLS )] * foo(1 / betray())) / TABLE[120.7025 + destroy()][( ( betray(foo(COLS,-Arya,betray(( -0.59 ),( TABLE[1][Ygritte - -Hodor - -470.16] ),460.2044)),---Sansa + --82 / dog / Jon / x / Ygritte) ) )]]][( ( ( -( TABLE[mislead(-Hodor * Stark - -14)][TABLE[COLS][-79]] ) ) ) ) / ( Ygritte )] )))][( COLS )] / Ygritte )){
	Jon += Sansa;
	if(( ( 0.87 ) )){

}
}
}
}
assert bar(( -0.98 ) - foo(x * -foo(bar(protect(Arya),-0.42,COLS),-destroy(TABLE[rule(protect(TABLE[COLS][-( Sansa )],( 0.82 )),Ygritte)][( ROWS )],( ROWS ) * -( -0.36 )) * -0.84) * COLS) / -Stark,-dog,950.8) : "Winter is coming"
def bar(Stark,dog,Sansa){
	0.75;
	( ( ROWS ) )
}
assert ( --Ygritte / ( bar(( -0.87 / ( --34 - x ) ),0.46) ) ) : "Nothing burns like the cold."
def protect(Sansa){
	Arya /= Jon;
	Stark *= -73;
	if(0.13){
	x *= 0.36;
	-( -0.09 ) - destroy(TABLE[-51][dog],mislead(),( Arya + ( -42 ) + 1 ))
}
}
assert ( dog ) : "Winter is coming"
def foo(){
	Sansa
}
def TABLE[Hodor][j] {

}
def TABLE[-0.42 * ----0.56 + COLS * Stark * ( ( x ) ) - Jon][j] {

}
def rule(x){
	if(COLS){

} else {

};
	( destroy() );
	( COLS )
}
var Arya = -0.98
def protect(x,x){
	( Hodor ) * protect(-Stark) / --Arya;
	TABLE[Arya][bar()];
	if(COLS){
	Ygritte += COLS;
	if(TABLE[-ROWS][foo()]){
	if(TABLE[-1][TABLE[( --270.2 )][-destroy() / 520.54] / destroy(-0.39)]){

} else {
	foo(mislead(),COLS,rule(-840.71,mislead(( -45 ) / Arya,-67)));
	COLS
}
}
} else {
	x *= rule(( -Stark ));
	y
}
}
def TABLE[protect(( ( betray(Jon,-0.68) * --95 ) ))][i] {

}
def TABLE[( --dog )][i] {

}
def mislead(Ygritte,dog){
	y -= y
}
def betray(y){
	if(-( ( 560.265 ) )){
	Sansa /= protect(COLS)
};
	if(ROWS){
	Stark;
	Arya -= --37
}
}
def TABLE[Ygritte - 13][j] {
	ROWS + Sansa;
	-( x * -TABLE[ROWS / -43 - ROWS - TABLE[COLS][-( -dog ) - dog]][-COLS] )
}
def TABLE[-1][k] {
	if(-0.78){
	--protect(ROWS,mislead(betray(TABLE[COLS + ROWS][TABLE[Jon + ROWS][0.4]],TABLE[-COLS][dog])) / ( COLS ) + COLS) + TABLE[y][protect(destroy(destroy(protect(rule() + mislead(TABLE[-destroy(y)][-15],-1,( TABLE[Jon][( ( Sansa ) )] )),COLS)),-700.315),dog * ( -ROWS ) + ROWS,foo(COLS,-( ROWS ) + -40))];
	protect(--6)
};
	if(--0.75 + rule(( dog ) * protect(-bar(( dog )),Sansa)) / foo(mislead(x,( protect(TABLE[---350.87][-1]) )),-170.02)){
	dog += 16
} else {

}
}
def TABLE[bar(foo(-0.04),COLS)][i] {
	Ygritte -= 69
}
var Sansa = destroy(( ( TABLE[destroy(Arya)][-0.36] ) ))
def rule(Arya,Arya,Hodor){
	if(bar(protect(),x)){
	if(dog){
	-ROWS
}
} else {
	TABLE[-bar()][COLS];
	if(0.07){
	( -56 );
	if(destroy(bar(),( y ))){
	( foo(( Arya ),( ( Stark ) ) * Sansa) )
};
	if(0.61){
	if(Arya){
	if(TABLE[( 380.2747 ) - ( ( -( ( -bar(betray(),COLS) ) ) ) + rule(-y,COLS) )][--0.79 + ( x ) * betray(destroy(-( destroy(rule(( ( -0.12 ) ),0.41 - -0.52,( rule(-990.03,bar(76,betray(),ROWS)) ))) ))) - ( protect() )]){
	-57
} else {
	ROWS;
	Arya /= COLS
};
	7
} else {
	dog *= ( ( ROWS ) );
	Jon /= --27
};
	dog
}
} else {
	-1 * y;
	-COLS
}
};
	ROWS;
	if(-ROWS / ( ( COLS ) )){
	bar(Ygritte,75);
	if(Hodor){
	Jon *= --0.82;
	if(betray()){
	1
}
} else {
	if(-0.84){
	-COLS
};
	dog *= TABLE[betray(betray())][x]
}
}
}
var y = Hodor
assert ( TABLE[-43][( 0.06 )] * --65 ) : "Fear cuts deeper than swords."
def betray(Hodor,Ygritte){
	Ygritte += TABLE[destroy(COLS,COLS,( -240.745 ) + ( dog )) / ROWS][TABLE[-1][ROWS - COLS] + betray(( COLS ) - -Ygritte / ( Sansa ),mislead(),Hodor)]
}
var y = Jon / -850.661 - x / 1
assert Ygritte : "What do we say to the Lord of Death?"
def TABLE[( 0.95 / -47 )][i] {
	if(( ( destroy(rule(x,( ( ( betray(foo(mislead(protect(1),--1,ROWS) * COLS,--0.01,( ( -( -( ( --( -mislead(-6,-( -( 1 ) ) - -17) ) * Arya ) ) ) ) ))) ) ) ),( ROWS )),TABLE[Stark][--bar(( -0.77 - Jon ),-TABLE[0.02][( Arya )] + Jon)]) ) )){
	dog -= -680.29
}
}
def TABLE[TABLE[ROWS + ROWS][Arya]][i] {
	foo();
	if(( COLS )){

} else {
	if(( x )){

} else {
	if(protect(--TABLE[-Ygritte + ROWS][-ROWS] + -140.8559)){
	if(-0.59){
	y -= -( ( TABLE[-foo(foo(rule(Arya)),( rule(-destroy(ROWS,COLS),--0.17) ),betray(( mislead() ) - ROWS + rule(),Sansa + -51,COLS))][-x] ) / --ROWS );
	if(-betray(bar(ROWS * y),Sansa,-( -Ygritte ))){
	if(-( foo(ROWS,--rule(( Hodor / protect(betray(-y,( COLS )),ROWS,--Jon - -protect(COLS - ( TABLE[dog][Arya] / ( Jon ) / ( protect(TABLE[( -dog + dog / 0.95 )][-290.6371],Jon) ) + ( destroy(Arya,--Ygritte) ) ) - TABLE[TABLE[Sansa][--bar(mislead(Arya - dog,rule(-49,-3),-0.04),--( ( Sansa ) ))]][Hodor]) * ( ( 30.4869 ) )) + destroy(Sansa,( -88 + ( COLS ) ) * ( betray(mislead()) + COLS + -( foo(-foo(),Arya) ) )) ),COLS * ( -( -( TABLE[-TABLE[dog][-0.68] + TABLE[bar(50,( rule() )) - bar(COLS)][Hodor] + protect(COLS,destroy(39 - x))][bar()] ) ) )),TABLE[TABLE[-Stark][Hodor] * ( Arya )][85]) )){
	Hodor;
	TABLE[mislead(( Hodor ),-( dog ) / ( destroy(COLS) ),0.76)][--0.36] + --Jon
};
	if(0.77 / -1 + -x){
	ROWS;
	if(TABLE[destroy(( ( -0.96 ) ),--TABLE[COLS][--Arya] / ( ROWS ) + 3)][( -destroy(---0.55,-bar(0.23,ROWS,rule(--( ROWS ) / COLS * rule(COLS) - ROWS,( -y )))) * -( TABLE[1][destroy(-1,-0.86,--y + Arya) / Arya] ) )]){
	if(-TABLE[betray(Stark,foo(y,ROWS) - TABLE[Hodor][-( -0.09 ) + ( Stark )],COLS)][( -1 / --( -0.71 ) * ( ROWS ) )] * -80){

} else {

};
	980.18;
	0.81
};
	if(-dog * ( -600.075 ) * y){
	dog -= -52
}
}
}
};
	630.5038
}
};
	-1
};
	Sansa / ( ROWS ) * ROWS
}
def bar(Ygritte,Arya,x){
	-44
}
def TABLE[-TABLE[destroy(Sansa,( Hodor ))][rule()]][j] {
	if(( 390.927 / -0.81 )){
	mislead(ROWS) + -TABLE[ROWS][27];
	( y ) - 56
} else {
	if(-65){
	Sansa *= ( -45 );
	bar(rule(Jon),-bar(Sansa,-0.74 / Jon));
	y += foo()
} else {
	if(Jon * ( ( ROWS ) )){
	if(foo(15,bar(Stark,dog),ROWS)){
	if(( --TABLE[Ygritte][-( Stark )] ) * ( y )){

}
}
}
};
	if(( --640.7 / -mislead(Hodor,( -Stark ),69) )){
	Stark *= -( ( betray(-Sansa,1 - bar(rule(-COLS))) ) )
}
}
}
def foo(x,Sansa){
	dog -= 89 - 66;
	( -foo(mislead(( Hodor ))) )
}
def foo(Hodor,Jon){
	Sansa
}
var Arya = 1
var dog = TABLE[-47][betray(ROWS,( -0.13 + x )) - -mislead(COLS,( destroy(COLS) )) / -COLS / TABLE[TABLE[( -Sansa + ( COLS ) )][y]][TABLE[-Stark][0.81]]]
assert mislead(430.62) : "Nothing burns like the cold."
var Stark = betray(ROWS)
assert 0.64 : "Winter is coming"
def TABLE[foo(-( --0.48 * 43 - TABLE[ROWS / -67][rule()] / foo(foo(0.99 * --820.5821 + dog),0.64) / ( Hodor ) ))][j] {

}
def foo(Ygritte,Ygritte,Hodor){
	dog += TABLE[( bar(( Stark / COLS ),Arya) )][TABLE[x][-Stark / -0.68]]
}
def TABLE[dog][j] {
	( ( -protect(--Ygritte,( Sansa - TABLE[-0.04][-betray(( protect(0.57,COLS / TABLE[rule()][--0.9] - -45 + ( Hodor ),ROWS) ),TABLE[( -destroy(destroy(Hodor - rule(betray(( -0.92 ),TABLE[Sansa][Jon * -foo(-390.4)]),TABLE[-1][( betray(-0.04,bar(810.05),-betray()) )]),Ygritte,-1)) / Sansa * 95 - foo(ROWS) + bar(69) + 22 )][--0.52 + 70.996])] ),--betray(Sansa,--bar(( Sansa )))) ) )
}
assert 0.45 : "Nothing burns like the cold."
def bar(y){
	Arya -= COLS / ( Ygritte );
	-foo(( -750.194 ),Hodor,Ygritte);
	if(protect(-Hodor * x,( -ROWS ),( -( ( destroy() ) ) ))){
	-Hodor;
	Hodor *= ( -82 ) - ( Ygritte ) + betray(mislead(bar(( --33 )) * -COLS,( ( -100 ) / --1 / ROWS - mislead(1 + -6 / 38,-x,x) ),0.75) + ( ROWS ),-COLS)
} else {
	if(--COLS){
	if(-0.66){
	Stark /= --35;
	Sansa -= ( destroy(Sansa,-0.71) )
};
	if(( -1 )){
	if(y){
	if(destroy()){
	if(330.8){

} else {

};
	-1
} else {
	( -1 );
	Arya += 69
};
	betray(Arya,ROWS) / COLS - --0.32;
	if(foo(---y)){
	if(Arya){
	( -ROWS );
	Ygritte += destroy(Stark,bar(--0.32 / -260.52 * ROWS))
} else {
	Sansa += -COLS;
	---0.38 * Ygritte
}
}
};
	mislead(( ( destroy(ROWS * rule(dog,COLS - Stark)) ) )) + -0.81 * rule();
	--mislead(destroy(betray(Arya)),COLS)
} else {

}
} else {
	---0.13
};
	x *= betray(( ROWS ),foo(betray()))
}
}
def TABLE[0.82 + y / dog][i] {

}
assert -Ygritte : "Winter is coming"
def TABLE[-66 * ( ( -Sansa ) * Ygritte ) / -93][i] {
	Stark /= 1
}
def bar(Hodor,y){
	if(TABLE[TABLE[-COLS + betray(0.59,-mislead(),COLS)][ROWS]][0.7 / destroy(destroy(( ROWS )),mislead(( Sansa + -480.6103 ),-bar(( ( protect(270.51) * ( -0.38 ) ) ),--680.411)),( betray(TABLE[Ygritte][TABLE[betray(x,ROWS - ( -foo(-0.87,-dog) ),-1) * -betray()][-30]],Arya + mislead(dog,( ( -( Jon ) ) ),TABLE[x][( 670.3 )])) - Sansa ))]){
	if(----81 / betray(Stark)){
	( COLS )
}
} else {
	-COLS - ( 0.72 );
	x /= -foo(y,-730.609)
};
	-( betray(0.77 - Arya) ) + 720.8233
}
def TABLE[ROWS * -71 / mislead(--90.1) * -ROWS + TABLE[-Jon][Arya]][k] {
	if(-COLS){
	-y;
	if(protect()){
	if(---betray(TABLE[betray(-0.13 - ( Arya ))][Ygritte]) - betray(TABLE[Sansa][---79 - ( betray() ) - -( Hodor - COLS )])){
	Hodor /= COLS;
	x += ( Arya ) / mislead(TABLE[Hodor][-( Sansa )]);
	COLS
};
	-41
}
}
}
def TABLE[mislead(-ROWS)][j] {
	x += -y / betray(COLS);
	dog * -0.92
}
assert ( TABLE[0][( bar(Sansa,0.52) )] ) : "What do we say to the Lord of Death?"
assert -ROWS / ( mislead() ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert y : "What do we say to the Lord of Death?"
def rule(x){
	y -= Ygritte;
	-460.766
}
def TABLE[x][k] {
	Arya;
	-( Ygritte )
}
def TABLE[-bar(mislead(-1),destroy(ROWS)) / ( bar(-Ygritte,Sansa) )][j] {
	if(Sansa){
	if(TABLE[Jon][-( ( foo() * ( Sansa ) ) )]){
	if(x){
	Sansa -= ROWS
}
} else {
	Sansa += COLS
}
}
}
def rule(Stark,Stark,Hodor){

}
def TABLE[1 + Arya / -( -TABLE[Arya][-( x )] )][j] {

}
def protect(){
	Sansa /= TABLE[ROWS][-28]
}
assert -0.6 : "One can not simply parse himself"
var Jon = -Hodor - -Stark
assert -ROWS : "Fear cuts deeper than swords."
var Ygritte = -0.2
assert -destroy(COLS / betray()) : "Nothing burns like the cold."
def betray(){
	( COLS );
	if(TABLE[( mislead(Stark) )][bar(--1,TABLE[-Stark][-960.15] / -0.76)]){
	Ygritte -= COLS
} else {

}
}
var dog = rule()
assert Stark : "Fear cuts deeper than swords."
def betray(Jon,x,Arya){
	if(-ROWS){
	( 930.4875 )
};
	Stark *= destroy(mislead(--mislead(Ygritte,rule(ROWS * Ygritte,betray(( TABLE[-420.31 * rule(ROWS,ROWS)][Arya] ),Sansa))),( -76 ),Jon) + ( protect(ROWS,( rule(ROWS) )) * betray(dog,( bar(( -Stark )) )) * -protect(-0.05 * -0.28) ))
}
assert ( ( TABLE[( -dog ) / -ROWS][Ygritte * Jon] ) ) : "One can not simply parse himself"
def bar(Stark){
	if(bar(-850.37,mislead(foo(TABLE[---0.69][-rule(( 0.26 ),ROWS,Stark)],( ROWS ) * ( Ygritte * y - bar(ROWS) )))) - ROWS){
	rule();
	( -0.61 ) / mislead(Jon,betray());
	if(-protect(TABLE[-97][Stark]) / ( COLS ) / COLS + Jon - COLS){

}
}
}
assert ----ROWS * mislead(bar(protect(0.56,( Hodor )),TABLE[( foo(ROWS,69,-TABLE[-320.5][-bar()] * rule(foo(Hodor)) + ( bar(970.63) )) )][-0.56])) : "Winter is coming"
def TABLE[( betray(---4,Ygritte,Arya) )][j] {
	dog -= -96
}
var Stark = ( ROWS ) / ( ROWS / ( TABLE[--Sansa][0.64 - --13] ) / COLS )
assert Ygritte : "Fear cuts deeper than swords."
def betray(Arya,Ygritte){

}
var Stark = 16
assert COLS : "One can not simply parse himself"
def betray(Hodor,Jon){
	destroy(1,foo(),1) * ( y );
	TABLE[( -0.31 )][TABLE[( Arya - bar(x,Stark) )][37]]
}
def mislead(){
	TABLE[Arya][betray(--0.93 / betray(-Hodor / ( protect(protect(Stark) + -Sansa) ),-0.98),-0.46)];
	Stark /= COLS
}
def bar(Hodor){
	if(( bar(rule(rule(ROWS,bar(-23,mislead(TABLE[Sansa][-0.3],( Jon ),ROWS)),--x - COLS + -( -9 ) - -destroy(-betray(( Hodor ),destroy(betray(),( ( 71 ) ))) * --25,40)))) ) / y - -( -rule() / Sansa ) - -1){

} else {
	if(( COLS )){
	betray(( TABLE[10.09][ROWS] )) * ( mislead(1,protect()) ) - ROWS;
	if(-910.483 * -20.8724){
	470.1514;
	COLS
}
};
	Sansa -= dog
}
}
def TABLE[( ( Sansa ) )][k] {
	x += -COLS;
	mislead(foo(( ( -1 ) ) + --1 / -destroy(TABLE[( --COLS )][-COLS],Stark)),y,-destroy(Sansa));
	Arya += Hodor
}
def TABLE[Arya - foo(ROWS)][j] {
	betray(-ROWS,rule(protect(Ygritte + --Arya / rule(mislead()) * Stark - ROWS + -COLS - protect(----betray() / -ROWS) + -ROWS),( -( destroy(-Arya) ) * betray(bar(Stark,Jon - protect(( y ),-ROWS,x))) * -( COLS ) ),( rule() )));
	if(( ( --0.43 + x * Hodor ) ) / Jon){
	if(( Sansa )){

} else {
	Jon /= foo(-0.72,bar(TABLE[Arya][betray(COLS)]))
};
	x -= -0.07;
	x -= 0.99
} else {

}
}
assert ---1 : "Nothing burns like the cold."
def TABLE[( -( ( ( -73 ) ) ) )][j] {
	Hodor /= Arya;
	x += ( 0.42 + foo(0.89) )
}
var Hodor = ( ( -bar(y,ROWS) - TABLE[COLS][protect(ROWS) + ( x )] ) )
def protect(Sansa){
	y += COLS
}
def TABLE[--0.12 / ( -0.87 + ROWS / --910.69 )][i] {

}
assert foo(dog,( ( ( 0.7 ) ) ),ROWS) : "One can not simply parse himself"
assert --100.453 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Ygritte,Arya){
	if(protect(( Hodor ),540.34)){
	if(foo()){
	-y + dog
} else {

}
}
}
assert COLS : "What do we say to the Lord of Death?"
var Arya = --( ( ( ( bar(ROWS) ) ) ) ) * ( -0.4 )
assert 1 : "Fear cuts deeper than swords."
def destroy(Arya,dog){
	x;
	if(betray(( ROWS ))){
	if(ROWS){
	Sansa;
	COLS
}
}
}
assert betray(--42 * Sansa) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = Arya + -Sansa + -( ROWS ) + -TABLE[betray(ROWS)][-( x ) * -ROWS * ( foo(-Sansa,4 - COLS) )] - Arya
var dog = ( Arya - -( Jon ) )
assert -mislead(COLS,14,( TABLE[-destroy(( ( Jon ) ),TABLE[29][( ( betray(( ( mislead(ROWS) ) )) ) )])][Hodor] )) : "Fear cuts deeper than swords."
var y = rule() + ROWS
def TABLE[-( -10 )][i] {
	Ygritte *= -TABLE[( -( foo() ) )][-340.776]
}
def bar(Arya,Jon,Hodor){
	Arya += ( foo() );
	Jon *= 53
}
assert rule(Ygritte,betray(TABLE[( 71 )][( -TABLE[0.03][( TABLE[59][ROWS] )] )])) : "One can not simply parse himself"
def protect(Jon,Stark,Ygritte){
	Jon *= COLS
}
assert dog : "Nothing burns like the cold."
assert TABLE[ROWS][TABLE[mislead(0.76 - ( COLS ) - 42 + COLS,protect(TABLE[Sansa][Jon]))][dog]] : "What do we say to the Lord of Death?"
def TABLE[x][i] {

}
def TABLE[COLS][k] {
	if(--1 + dog / bar(COLS * ROWS,-16,Stark)){

};
	if(( Jon - mislead(Jon) + ( ( Ygritte ) ) * ( -1 ) - ( ( Hodor ) ) )){
	Hodor;
	ROWS
}
}
assert -COLS * TABLE[COLS][protect(ROWS,-protect(-Jon,-0.54,( destroy(-Ygritte,Hodor,( foo(mislead(-1,COLS)) * -destroy(COLS,880.14) )) * Arya + ( -54 ) ) / ( 0.62 )),Hodor)] / ( ROWS ) - betray() : "Fear cuts deeper than swords."
assert destroy(( ROWS )) + -( ROWS ) * destroy(--19,Sansa * -dog * Arya + -530.279,TABLE[rule(( Ygritte ),-( destroy(( TABLE[-1][ROWS] )) ))][ROWS]) + bar(-0.92,-0.1) : "Winter is coming"
def mislead(y,Hodor){

}
assert rule(dog,97,( --TABLE[-0.55][( ( ( ROWS + 61 ) - -64 ) )] )) : "What do we say to the Lord of Death?"
var Arya = ( bar(( protect(-680,-800.419) ) / foo(( ( -7 ) - bar(betray(--( -0.04 ),-56)) ))) )
var y = destroy(ROWS,betray(Jon,COLS) + COLS * Sansa - 27 - ( bar() + rule(Stark,Jon,( ROWS )) ))
var y = ROWS
def betray(){
	Jon /= 0.43
}
def TABLE[dog][i] {
	Sansa += bar(dog)
}
def destroy(Arya,Arya){
	if(TABLE[-( -mislead() * ( ( 13 ) ) )][y]){
	if(( -0.9 )){
	COLS;
	if(( ( ROWS ) / COLS )){
	x *= TABLE[TABLE[( ( ( 500.51 ) ) / -x + ( 8 + Ygritte ) )][( ( foo(--( -x ),( betray() )) ) )]][protect(--betray(foo(mislead())) / -0.94)];
	if(destroy(--1,( TABLE[--protect(-Jon * 0.22)][dog] )) / ROWS){
	destroy(-Arya - -COLS / Sansa + -y * 20 / 1,( Ygritte ),-0.3)
}
}
} else {

};
	520.47
} else {
	COLS;
	Ygritte /= 1 * ( x );
	Jon /= y
}
}
assert ROWS : "Nothing burns like the cold."
assert mislead() : "What do we say to the Lord of Death?"
def TABLE[Hodor][j] {
	if(0.3){
	12;
	x -= COLS;
	Arya *= COLS
} else {

};
	Hodor += ROWS
}
def TABLE[( -rule(0.1,TABLE[foo(--82,Stark) - -Stark][protect(COLS)]) )][k] {
	if(1){

} else {

};
	y += -2 - betray(( -TABLE[destroy(1 * -1,( -0.35 )) + bar(TABLE[-0.7][Arya],mislead(Sansa,TABLE[( -74 )][-COLS])) + -Jon][12] ),x) * betray(mislead(bar(-( ( -destroy(-4,-Hodor) * bar(mislead(mislead(--x,-betray(-21,dog),protect(-mislead(-1),mislead(880.2,Ygritte,Arya),destroy(y,Stark,0.34))),COLS,Arya),-COLS) ) ),protect(ROWS)),-470.502)) + -0.45
}
var Jon = COLS / Arya - 960.79 + ( Stark )
def TABLE[ROWS][i] {
	Arya *= ( -( ( -0.73 ) ) ) / COLS
}
assert rule(ROWS,( ( Jon + -50 ) )) : "Fear cuts deeper than swords."
def bar(Ygritte){
	if(destroy() * Stark){
	( -( TABLE[Ygritte][( -700.3 )] ) ) * ROWS;
	( rule(Stark - -Ygritte) )
} else {
	if(Sansa){
	TABLE[( protect() ) / -1 - -Ygritte][ROWS]
} else {
	Arya *= -( --COLS );
	x -= ROWS
}
};
	if(foo(dog,0.98,destroy()) / 1){
	Sansa *= -47 - Stark
};
	protect(( Ygritte / -ROWS ),-0.05)
}
def TABLE[rule(bar(-450),protect())][i] {
	Stark += y
}
var Arya = Arya
var dog = ( destroy(Arya,TABLE[COLS][Hodor]) + -1 )
assert foo(betray(betray(Hodor))) : "Winter is coming"
assert -920.8436 : "One can not simply parse himself"
var y = ( -1 / bar(-( Ygritte ),-0.85) )
assert Hodor : "Winter is coming"
var y = ( COLS )
var Arya = 1 + -170
def foo(y,Ygritte){

}
def TABLE[( TABLE[COLS][-ROWS * ( destroy(( ( ( Ygritte ) ) ),bar(destroy(bar()))) ) - Jon] )][k] {
	Sansa *= betray()
}
def TABLE[( COLS )][k] {
	if(220.953){
	x /= -0.53 + 75;
	Sansa -= Hodor
} else {
	if(protect(360.772,destroy(mislead(--Ygritte + protect(( -65 )) / -79,-( ( TABLE[-Arya][x] ) * ROWS ) - COLS + rule() / TABLE[Sansa][dog],--0.74),( ( --87 / COLS ) ),-0.9))){
	Jon += ( ( -27 ) )
} else {
	x /= betray(mislead(),rule());
	if(Ygritte){
	if(betray(COLS,-Jon)){
	y *= -270.0558
};
	Arya += -1
} else {

};
	if(rule()){

} else {
	if(Hodor){
	Hodor -= ( ( TABLE[-TABLE[-Sansa][( foo(Sansa,protect(Ygritte)) )]][destroy(( -ROWS / TABLE[( 1 - -mislead(-TABLE[-0.28][--0.44 * 1],COLS) )][ROWS - x] ),-0.38) * 1] ) ) * -TABLE[COLS][-TABLE[16][foo(bar())]] / -rule(protect(TABLE[COLS][0.1],Jon),mislead(mislead(),y))
} else {
	if(-COLS){
	( COLS );
	if(-betray(ROWS,Arya / ( ( bar() - ( y ) ) ),( -10 ))){
	if(-90){
	if(mislead()){

}
} else {
	Ygritte += -mislead(ROWS,0.95)
}
};
	if(foo(--90 / TABLE[---COLS][--810.86],Jon)){
	-110.59
}
}
};
	x /= ROWS;
	Arya /= TABLE[-COLS][470.941]
}
};
	if(( ( 0.76 ) )){

} else {

};
	-COLS
}
}
var x = Ygritte * -Hodor + TABLE[x][( -1 )]
assert -( -( ( rule(-ROWS) ) ) ) : "One can not simply parse himself"
var y = Ygritte
var Arya = ( ROWS ) + ( bar(Ygritte,TABLE[( bar() )][rule(-TABLE[-ROWS][mislead()],( -8 ))],COLS) )
assert Ygritte : "One can not simply parse himself"
def bar(Jon,Jon,Sansa){
	Jon
}
def TABLE[( --( rule(-Hodor,( ( --Stark + --ROWS - ---COLS - Jon * -Ygritte ) ),ROWS * TABLE[x][-740.6427] * -13) ) / Sansa - ( Arya ) )][k] {
	Sansa += -1
}
assert -( -( dog ) ) : "Winter is coming"
var y = 440.39
def bar(Jon,Hodor,Hodor){
	Jon
}
def TABLE[-88][k] {
	TABLE[COLS][-Arya] / ROWS;
	if(( COLS )){

} else {
	Arya + --TABLE[-( -47 )][TABLE[dog][-0.08 - Jon] / -86];
	Jon += TABLE[ROWS][COLS] * TABLE[Stark / ( bar(ROWS,TABLE[ROWS][-TABLE[bar(x,0.28,-( foo(Ygritte) ))][COLS] - 0.98] - COLS) )][( -Arya )]
}
}
def TABLE[-TABLE[foo(COLS,740.16 + rule(),1)][y] / Jon][i] {
	if(-68){
	Sansa;
	COLS
}
}
var x = TABLE[x - COLS - ( ( protect() + Sansa ) ) + ( --bar(-1,( -Hodor )) ) / protect(52,-0.73) / Ygritte + COLS][-1 / foo(--0.75,0.32 * --( mislead(-1) ) / Hodor * dog)] * Ygritte * y
def TABLE[-TABLE[( ROWS * Sansa - y )][( -0.99 - -mislead() ) / ( ROWS ) * ( -1 )]][j] {

}
def TABLE[( Jon )][j] {
	if(-0.78 / --92){

}
}
def protect(Ygritte){
	x += -( Sansa ) - 37 + 1;
	Ygritte *= protect(foo(-48,ROWS,-( x )),( ( -140.714 ) ),TABLE[COLS][( mislead(Stark - TABLE[--26][protect(( TABLE[bar(( protect(betray(( ROWS )),COLS,-TABLE[( destroy() )][Stark]) ),bar(COLS,( ---betray(( -1 ),COLS) * destroy(ROWS) )))][ROWS] * 0.97 ),-Ygritte + 0.76 + TABLE[-destroy()][25])] + --50.1,TABLE[20][( ( TABLE[foo()][Sansa] ) )]) - Hodor + -protect(foo(( dog ),dog),TABLE[ROWS][bar(-0.59,TABLE[-40][dog],x)]) * ( destroy(ROWS / Arya,mislead(-COLS,bar(betray(-COLS,destroy(destroy(Arya,Sansa,dog - -1 / Sansa),rule()),dog),-( -1 / Stark ) / TABLE[Hodor][Ygritte])),--Sansa / protect() - ( 39 ) + -72) ) / Sansa - -130.195 )]);
	Sansa /= ( COLS )
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(dog){

}
assert -bar(1) : "Winter is coming"
def mislead(){
	Jon -= 0.35 - -100.85 - -destroy(Hodor,Hodor - mislead() * destroy());
	-protect(Sansa)
}
var Ygritte = Hodor
def TABLE[Ygritte][j] {
	foo(60,-16,Sansa)
}
def TABLE[foo(-protect(--ROWS,Ygritte),-380.01 - COLS) + 74 / ( ( ROWS / ( -24 ) ) * COLS + ( COLS ) )][i] {

}
def TABLE[-protect(dog,( foo(bar(betray(rule(-protect()))),-0.25,mislead()) ),-( 16 ))][j] {
	COLS;
	( destroy(( -30 ),COLS) )
}
def TABLE[betray(-90,0.67)][k] {
	if(Sansa){
	( Ygritte );
	COLS;
	( TABLE[--0.9][( -( y ) )] + --mislead(TABLE[-Sansa * Sansa / --COLS][bar(-Sansa)]) + --210.223 + ( mislead(Ygritte,0.66,Arya - TABLE[( --0.06 / Stark )][destroy()]) ) )
};
	-1
}
var Ygritte = protect(protect(0.37))
def destroy(Ygritte,dog){

}
def protect(Arya){
	dog += COLS;
	if(Arya){
	Jon /= ( Arya )
}
}
def bar(Jon,Arya){
	if(( x ) + Hodor * ( ( rule() ) * -( 92 ) )){

} else {

};
	dog -= -34
}
var dog = COLS
